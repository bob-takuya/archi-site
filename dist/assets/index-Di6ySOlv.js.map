{"version":3,"mappings":"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","names":["m","require$$0","createRoot","navLinks","jsx","HomeIcon","ArchitectureIcon","PeopleIcon","MapIcon","StorageIcon","Header","pathname","useLocation","theme","useTheme","isMobile","useMediaQuery","drawerOpen","setDrawerOpen","useState","toggleDrawer","open","event","AppBar","Toolbar","Typography","RouterLink","jsxs","Fragment","IconButton","MenuIcon","Drawer","Box","CloseIcon","List","title","path","icon","ListItem","ListItemText","Button","Footer","Container","LoadingSkeleton","variant","count","renderCardSkeleton","Card","CardContent","Skeleton","renderListSkeleton","renderHeroSkeleton","renderMapSkeleton","_","index","Grid","HomePage","searchTerm","setSearchTerm","recentWorks","setRecentWorks","loading","setLoading","error","setError","isDbReady","setIsDbReady","downloadProgress","setDownloadProgress","useEffect","handleProgressUpdate","progress","speed","eta","receivedLength","totalLength","emergencyTimeout","getAllArchitectures","__vitePreload","FastArchitectureService$1","timeoutPromise","reject","dataPromise","data","errorMessage","handleSearch","e","handleRetry","formatSpeed","formatTime","seconds","Fade","Stack","Chip","TextField","SearchIcon","Paper","CircularProgress","LinearProgress","TrendingUpIcon","Tooltip","RefreshIcon","Alert","work","CardActionArea","Divider","FastArchitectureService","indexResponse","metadataResponse","metadata","page","cacheKey","response","pageData","item","limit","query","filters","matchingIds","isFirstFilter","queryLower","queryIds","key","ids","id","architectLower","architectIds","yearStr","yearIds","yearIdSet","missingIds","maxPages","p","results","a","b","startIndex","endIndex","paginatedResults","total","totalPages","fastArchitectureService","ArchitecturePage","architectures","setArchitectures","totalItems","setTotalItems","currentPage","setCurrentPage","tagQuery","setTagQuery","selectedTags","setSelectedTags","selectedTagsWithYears","setSelectedTagsWithYears","availableTags","setAvailableTags","sortBy","setSortBy","tagYearsMap","setTagYearsMap","yearAnchorEl","setYearAnchorEl","currentTagForYear","setCurrentTagForYear","tagsYears","setTagsYears","itemsPerPage","location","navigate","useNavigate","queryParams","tag","search","year","prefecture","category","architect","sort","tags","t","baseTags","tagWithYears","yearMatch","baseTag","fetchArchitectures","result","handlePageChange","value","handleSearchChange","handleYearMenuOpen","years","prev","handleYearMenuClose","handleYearSelect","tagWithYear","newTagsWithYears","existingIndex","allTags","tagQueryString","self","searchTermValue","handleTagSelect","newTags","removedTags","removedTag","addedTags","handleClearSearch","handleSortChange","newSortBy","tagValue","yearValue","prefectureValue","categoryValue","architectValue","InputAdornment","Autocomplete","params","getTagProps","option","hasYear","isExpandable","selectedYear","yearDisplay","yearPart","ArrowDropDownIcon","FormControl","InputLabel","Select","SortIcon","MenuItem","Popover","label","color","Pagination","architecture","PersonIcon","LocationOnIcon","CalendarTodayIcon","BASE_PATH","DATABASE_CONFIG","DATABASE_URL","worker","database","isInitializing","initPromise","useChunked","DatabaseStatus","getDatabaseStatus","detectConnectionSpeed","startTime","duration","tryChunkedLoading","createDbWorker","n","configResponse","workerUrl","wasmUrl","dbConfig","versionResult","tablesResult","row","countResult","tryDirectLoading","sqljs","initSqlJs","SQL","file","dbResponse","contentLength","sizeInMB","dbResponse2","dbArrayBuffer","initDatabase","connectionSpeed","chunkedError","enhancedMessage","enhancedError","executeQuery","resultsToObjects","columns","values","obj","col","getSingleResult","getResultsArray","getArchitectureById","getArchitectureForMap","bounds","whereClause","L","Map","markers","center","zoom","height","singleMarker","mapCenter","setMapCenter","MapContainer","TileLayer","marker","Marker","Popup","Link","ArchitectureSinglePage","useParams","setWork","ArrowBackIcon","shinkenchikuInfo","shinkenchikuLabel","handleTagClick","getGoogleImageSearchUrl","workName","searchQuery","getWikipediaSearchUrl","CategoryIcon","EmojiEventsIcon","ImageSearchIcon","WikipediaIcon","MapComponent","getArchitectById","getAllArchitects","sortOrder","options","offset","joinClause","countQuery","dataQuery","dataParams","getArchitectTags","ArchitectsPage","architects","setArchitects","setTotalPages","setSortOrder","nationality","setNationality","setCategory","school","setSchool","birthYearFrom","setBirthYearFrom","birthYearTo","setBirthYearTo","deathYear","setDeathYear","ArchitectService.getArchitectTags","order","nat","cat","sch","birthFrom","birthTo","death","ArchitectService.getAllArchitects","getYearsForArchitectTag","updateUrlAndSearch","newParams","newQueryParams","CurrentFilters","activeFilters","f","selectedValue","newSortOrder","ArchitectureList","compact","EventIcon","idx","ArchitectSinglePage","setArchitect","teacherInfo","setTeacherInfo","ArchitectService.getArchitectById","teachers","findArchitectIdByName","err","name","formatEducation","education","eduStr","formatTeachers","teacher","tagType","searchParam","getGoogleSearchUrl","architectName","trimmedTag","architectTags","decade","PublicIcon","CakeIcon","PersonOffIcon","BusinessIcon","LinkIcon","TableContainer","Table","TableBody","TableRow","TableCell","SchoolIcon","MapPage","works","setWorks","allWorks","setAllWorks","setFilters","showFilters","setShowFilters","selectedWork","setSelectedWork","showWorkDetails","setShowWorkDetails","fetchWorks","generateRandomTimeframe","validWorks","minYear","maxYear","range","startYearIndex","startYear","endYear","ArchitectureService.getArchitectureForMap","randomTimeframe","filteredData","filteredWorks","handleFilterChange","applyFilters","clearFilters","handleWorkClick","FilterListIcon","React","ErrorBoundary","Component","props","errorInfo","isGitHubPages","hostname","logDatabaseDetails","isGHPages","dbInfo","DatabaseLoader","children","status","setStatus","setProgress","isMounted","progressInterval","increment","palette","typography","components","createTheme","ScrollToTop","AppContent","Routes","Route","App","ThemeProvider","CssBaseline","HashRouter","container","root"],"ignoreList":[0],"sources":["../../node_modules/react-dom/client.js","../../src/components/Header.tsx","../../src/components/Footer.tsx","../../src/components/ui/LoadingSkeleton.tsx","../../src/pages/HomePage.tsx","../../src/services/api/FastArchitectureService.ts","../../src/pages/ArchitecturePage.tsx","../../src/services/db/ClientDatabaseService.ts","../../src/services/db/ArchitectureService.ts","../../src/components/Map.tsx","../../src/pages/ArchitectureSinglePage.tsx","../../src/services/db/ArchitectService.ts","../../src/pages/ArchitectsPage.tsx","../../src/components/ArchitectureList.tsx","../../src/pages/ArchitectSinglePage.tsx","../../src/pages/MapPage.tsx","../../src/components/ErrorBoundary.tsx","../../src/utils/githubPages.ts","../../src/utils/dbUtils.ts","../../src/components/DatabaseLoader.tsx","../../src/styles/theme.ts","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useState } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  Button, \n  IconButton,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  Box,\n  useMediaQuery,\n  useTheme\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport HomeIcon from '@mui/icons-material/Home';\nimport ArchitectureIcon from '@mui/icons-material/AccountBalance';\nimport PeopleIcon from '@mui/icons-material/People';\nimport MapIcon from '@mui/icons-material/Map';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport CloseIcon from '@mui/icons-material/Close';\n\ninterface NavLink {\n  title: string;\n  path: string;\n  icon: React.ReactNode;\n}\n\nconst navLinks: NavLink[] = [\n  { title: 'ホーム', path: '/', icon: <HomeIcon /> },\n  { title: '建築作品', path: '/architecture', icon: <ArchitectureIcon /> },\n  { title: '建築家', path: '/architects', icon: <PeopleIcon /> },\n  { title: 'マップ', path: '/map', icon: <MapIcon /> },\n  { title: 'DBエクスプローラー', path: '/db-explorer', icon: <StorageIcon /> }\n];\n\nconst Header: React.FC = () => {\n  const location = useLocation();\n  const pathname = location.pathname;\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    setDrawerOpen(open);\n  };\n\n  return (\n    <AppBar position=\"static\" color=\"primary\" component=\"nav\" role=\"navigation\" aria-label=\"メインナビゲーション\">\n      <Toolbar>\n        <Typography\n          variant=\"h6\"\n          component={RouterLink}\n          to=\"/\"\n          data-testid=\"site-title\"\n          sx={{ \n            flexGrow: 1, \n            color: 'white',\n            textDecoration: 'none',\n            fontWeight: 'bold'\n          }}\n        >\n          建築データベース\n        </Typography>\n\n        {isMobile ? (\n          <>\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              data-testid=\"mobile-menu-button\"\n              onClick={toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Drawer\n              anchor=\"right\"\n              open={drawerOpen}\n              onClose={toggleDrawer(false)}\n            >\n              <Box\n                sx={{ width: 250 }}\n                role=\"presentation\"\n                onClick={toggleDrawer(false)}\n                onKeyDown={toggleDrawer(false)}\n              >\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 1 }}>\n                  <IconButton onClick={toggleDrawer(false)}>\n                    <CloseIcon />\n                  </IconButton>\n                </Box>\n                <List role=\"menu\" aria-label=\"ナビゲーションメニュー\">\n                  {navLinks.map(({ title, path, icon }) => (\n                    <ListItem\n                      component={RouterLink}\n                      to={path}\n                      key={title}\n                      role=\"menuitem\"\n                      data-testid={`nav-link-${title.toLowerCase()}`}\n                      sx={{\n                        color: pathname === path ? 'primary.main' : 'text.primary',\n                        backgroundColor: pathname === path ? 'rgba(0, 0, 0, 0.08)' : 'transparent',\n                        fontWeight: pathname === path ? 'bold' : 'normal',\n                        '&:hover': {\n                          backgroundColor: 'rgba(0, 0, 0, 0.04)'\n                        }\n                      }}\n                    >\n                      {icon}\n                      <ListItemText primary={title} sx={{ ml: 2 }} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            </Drawer>\n          </>\n        ) : (\n          <Box sx={{ display: 'flex' }} role=\"menubar\" aria-label=\"デスクトップナビゲーション\">\n            {navLinks.map(({ title, path }) => (\n              <Button\n                key={title}\n                component={RouterLink}\n                to={path}\n                color=\"inherit\"\n                role=\"menuitem\"\n                data-testid={`nav-link-${title.toLowerCase()}`}\n                sx={{\n                  mx: 1,\n                  fontWeight: pathname === path ? 'bold' : 'normal',\n                  borderBottom: pathname === path ? '2px solid white' : 'none'\n                }}\n              >\n                {title}\n              </Button>\n            ))}\n          </Box>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header; ","import React from 'react';\nimport { Box, Typography, Container } from '@mui/material';\n\nconst Footer: React.FC = () => {\n  return (\n    <Box\n      component=\"footer\"\n      role=\"contentinfo\"\n      data-testid=\"footer\"\n      sx={{\n        py: 3,\n        px: 2,\n        mt: 'auto',\n        backgroundColor: 'primary.main',\n        color: 'white',\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"body1\" align=\"center\">\n          建築データベース © {new Date().getFullYear()}\n        </Typography>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Footer; ","import React from 'react';\nimport { \n  Box, \n  Card, \n  CardContent, \n  Skeleton, \n  Grid,\n  Container \n} from '@mui/material';\n\ninterface LoadingSkeletonProps {\n  variant?: 'card' | 'list' | 'hero' | 'map';\n  count?: number;\n}\n\nconst LoadingSkeleton: React.FC<LoadingSkeletonProps> = ({ \n  variant = 'card', \n  count = 6 \n}) => {\n  const renderCardSkeleton = () => (\n    <Card sx={{ height: '100%' }}>\n      <CardContent>\n        <Skeleton variant=\"text\" height={40} sx={{ mb: 1 }} />\n        <Skeleton variant=\"text\" height={20} sx={{ mb: 1 }} />\n        <Skeleton variant=\"text\" height={20} width=\"60%\" />\n      </CardContent>\n    </Card>\n  );\n\n  const renderListSkeleton = () => (\n    <Box sx={{ p: 2 }}>\n      <Skeleton variant=\"text\" height={32} sx={{ mb: 1 }} />\n      <Skeleton variant=\"text\" height={24} sx={{ mb: 1 }} />\n      <Skeleton variant=\"text\" height={20} width=\"40%\" />\n    </Box>\n  );\n\n  const renderHeroSkeleton = () => (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ textAlign: 'center', py: 8 }}>\n        <Skeleton variant=\"text\" height={60} sx={{ mb: 2 }} />\n        <Skeleton variant=\"text\" height={30} sx={{ mb: 4 }} />\n        <Box sx={{ display: 'flex', justifyContent: 'center', mb: 4 }}>\n          <Skeleton variant=\"rectangular\" width={500} height={56} sx={{ borderRadius: 1 }} />\n        </Box>\n      </Box>\n    </Container>\n  );\n\n  const renderMapSkeleton = () => (\n    <Skeleton \n      variant=\"rectangular\" \n      width=\"100%\" \n      height={400} \n      sx={{ borderRadius: 2 }} \n    />\n  );\n\n  if (variant === 'hero') {\n    return renderHeroSkeleton();\n  }\n\n  if (variant === 'map') {\n    return renderMapSkeleton();\n  }\n\n  if (variant === 'list') {\n    return (\n      <Box>\n        {Array.from({ length: count }).map((_, index) => (\n          <Box key={index} sx={{ borderBottom: '1px solid #e0e0e0' }}>\n            {renderListSkeleton()}\n          </Box>\n        ))}\n      </Box>\n    );\n  }\n\n  return (\n    <Grid container spacing={4}>\n      {Array.from({ length: count }).map((_, index) => (\n        <Grid item key={index} xs={12} sm={6} md={4}>\n          {renderCardSkeleton()}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default LoadingSkeleton;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { \n  Typography, \n  Grid, \n  Card, \n  CardContent, \n  CardActionArea,\n  TextField,\n  Button,\n  Box,\n  Container,\n  Paper,\n  CircularProgress,\n  Alert,\n  Snackbar,\n  Fade,\n  Chip,\n  Stack,\n  Divider,\n  IconButton,\n  Tooltip,\n  LinearProgress\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ArchitectureIcon from '@mui/icons-material/AccountBalance';\nimport PeopleIcon from '@mui/icons-material/People';\nimport MapIcon from '@mui/icons-material/Map';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n// Import moved inside function to prevent module hanging\n// import { getAllArchitectures } from '../services/db/ArchitectureService';\nimport LoadingSkeleton from '../components/ui/LoadingSkeleton';\n\ninterface ArchitectureWork {\n  Z_PK: number;\n  ZAR_TITLE: string;\n  ZAR_ARCHITECT?: string;\n  ZAR_YEAR?: number;\n  ZAR_ADDRESS?: string;\n}\n\nconst HomePage: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [recentWorks, setRecentWorks] = useState<ArchitectureWork[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isDbReady, setIsDbReady] = useState<boolean>(false);\n  const [downloadProgress, setDownloadProgress] = useState<{\n    progress: number;\n    speed: number;\n    eta: number;\n    receivedLength: number;\n    totalLength: number;\n  } | null>(null);\n\n  useEffect(() => {\n    // Listen for database download progress events\n    const handleProgressUpdate = (event: CustomEvent) => {\n      const { progress, speed, eta, receivedLength, totalLength } = event.detail;\n      setDownloadProgress({ progress, speed, eta, receivedLength, totalLength });\n    };\n    \n    window.addEventListener('database-download-progress', handleProgressUpdate as EventListener);\n    \n    // Fast JSON loading - should complete in under 3 seconds\n    const emergencyTimeout = setTimeout(() => {\n      console.warn('Emergency timeout: forcing app to render without data after 30 seconds');\n      setLoading(false);\n      setIsDbReady(false);\n      setError('データの読み込みがタイムアウトしました（30秒）。ネットワーク接続を確認してください。');\n    }, 30000); // 30 seconds for fast JSON loading\n\n    const fetchRecentWorks = async (): Promise<void> => {\n      try {\n        setLoading(true);\n        setError(null);\n        console.log('最近の建築作品を取得中...');\n        \n        // Use fast JSON-based service instead of SQLite\n        const { getAllArchitectures } = await import('../services/api/FastArchitectureService');\n        \n        // Fast JSON loading timeout - should complete in under 3 seconds\n        const timeoutPromise = new Promise((_, reject) => {\n          setTimeout(() => reject(new Error('データの読み込みがタイムアウトしました（30秒）。ネットワーク接続を確認してください。')), 30000);\n        });\n        \n        const dataPromise = getAllArchitectures(1, 6);\n        const data = await Promise.race([dataPromise, timeoutPromise]) as any;\n        \n        clearTimeout(emergencyTimeout);\n        setRecentWorks(data.results || []);\n        setIsDbReady(true);\n        console.log('建築作品の取得に成功しました', data);\n      } catch (error: any) {\n        console.error('建築作品の取得に失敗:', error);\n        clearTimeout(emergencyTimeout);\n        \n        // Enhanced error messages with actionable guidance\n        let errorMessage = error.message || 'データベースからの読み込みに失敗しました';\n        \n        if (error.message?.includes('timeout')) {\n          errorMessage += ' インターネット接続が遅い可能性があります。しばらく待ってからページを再読み込みしてください。';\n        } else if (error.message?.includes('fetch')) {\n          errorMessage += ' ネットワーク接続を確認してください。';\n        }\n        \n        setError(errorMessage);\n        // Don't block the UI - show emergency fallback\n        setIsDbReady(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRecentWorks();\n    \n    return () => {\n      clearTimeout(emergencyTimeout);\n      window.removeEventListener('database-download-progress', handleProgressUpdate as EventListener);\n    };\n  }, []);\n\n  const handleSearch = (e: React.FormEvent): void => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      window.location.href = `#/architecture?search=${encodeURIComponent(searchTerm)}`;\n    }\n  };\n  \n  const handleRetry = () => {\n    setError(null);\n    setLoading(true);\n    setDownloadProgress(null);\n    window.location.reload();\n  };\n  \n  const formatSpeed = (speed: number): string => {\n    if (speed < 1024) return `${Math.round(speed)} B/s`;\n    if (speed < 1024 * 1024) return `${Math.round(speed / 1024)} KB/s`;\n    return `${Math.round(speed / 1024 / 1024)} MB/s`;\n  };\n  \n  const formatTime = (seconds: number): string => {\n    if (seconds < 60) return `${Math.round(seconds)}s`;\n    if (seconds < 3600) return `${Math.round(seconds / 60)}m ${Math.round(seconds % 60)}s`;\n    return `${Math.round(seconds / 3600)}h ${Math.round((seconds % 3600) / 60)}m`;\n  };\n\n  return (\n    <Container maxWidth=\"lg\" data-testid=\"homepage-container\">\n      {/* Hero Section */}\n      <Fade in={true} timeout={1000}>\n        <Box\n          component=\"section\"\n          role=\"banner\"\n          aria-labelledby=\"main-heading\"\n          sx={{\n            pt: 8,\n            pb: 6,\n            textAlign: 'center',\n            background: 'linear-gradient(135deg, #ECEFF4 0%, #D8DEE9 100%)',\n            borderRadius: 3,\n            mb: 6,\n            position: 'relative',\n            overflow: 'hidden',\n          }}\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              opacity: 0.1,\n              background: 'repeating-linear-gradient(45deg, transparent, transparent 10px, rgba(46, 52, 64, 0.1) 10px, rgba(46, 52, 64, 0.1) 20px)',\n            }}\n          />\n          <Box sx={{ position: 'relative', zIndex: 1 }}>\n            <Typography\n              component=\"h1\"\n              variant=\"h1\"\n              align=\"center\"\n              color=\"text.primary\"\n              gutterBottom\n              id=\"main-heading\"\n              sx={{\n                background: 'linear-gradient(135deg, #2E3440 0%, #4C566A 100%)',\n                backgroundClip: 'text',\n                WebkitBackgroundClip: 'text',\n                color: 'transparent',\n                mb: 2,\n              }}\n            >\n              建築データベース\n            </Typography>\n            <Typography \n              variant=\"h5\" \n              align=\"center\" \n              color=\"text.secondary\" \n              paragraph\n              sx={{ mb: 4, maxWidth: 600, mx: 'auto' }}\n            >\n              日本の建築作品と建築家を検索・閲覧できる\n              <br />\n              包括的なデータベース\n            </Typography>\n\n            {/* Quick Stats */}\n            <Stack \n              direction=\"row\" \n              spacing={3} \n              justifyContent=\"center\" \n              sx={{ mb: 4 }}\n            >\n              <Chip \n                icon={<ArchitectureIcon />}\n                label=\"14,000+ 建築作品\"\n                color=\"primary\"\n                variant=\"outlined\"\n              />\n              <Chip \n                icon={<PeopleIcon />}\n                label=\"2,900+ 建築家\"\n                color=\"secondary\"\n                variant=\"outlined\"\n              />\n              <Chip \n                icon={<MapIcon />}\n                label=\"全国対応\"\n                color=\"info\"\n                variant=\"outlined\"\n              />\n            </Stack>\n\n            {/* Search Section */}\n            <Fade in={true} timeout={1500}>\n              <Box \n                component=\"form\" \n                onSubmit={handleSearch}\n                role=\"search\"\n                aria-label=\"建築作品検索\"\n                sx={{ \n                  mt: 4,\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  maxWidth: 600,\n                  mx: 'auto',\n                  gap: 2,\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  placeholder=\"建築作品、建築家、住所などで検索\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  inputProps={{\n                    'aria-label': '建築作品検索',\n                    'data-testid': 'search-input',\n                    role: 'searchbox'\n                  }}\n                  sx={{\n                    '& .MuiOutlinedInput-root': {\n                      backgroundColor: 'white',\n                      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n                    },\n                  }}\n                />\n                <Button \n                  type=\"submit\"\n                  variant=\"contained\" \n                  color=\"primary\"\n                  startIcon={<SearchIcon />}\n                  size=\"large\"\n                  data-testid=\"search-button\"\n                  sx={{\n                    px: 3,\n                    py: 1.5,\n                    minWidth: 120,\n                  }}\n                >\n                  検索\n                </Button>\n              </Box>\n            </Fade>\n            {!isDbReady && loading && (\n              <Box sx={{ mt: 4, maxWidth: 600, mx: 'auto' }}>\n                {downloadProgress ? (\n                  <Paper sx={{ p: 3, background: 'rgba(255, 255, 255, 0.9)', borderRadius: 2 }}>\n                    <Typography variant=\"h6\" gutterBottom sx={{ color: 'primary.main' }}>\n                      📦 大きなデータベースを読み込み中...\n                    </Typography>\n                    <Box sx={{ mb: 2 }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                        <CircularProgress \n                          variant=\"determinate\" \n                          value={downloadProgress.progress} \n                          size={24} \n                          sx={{ mr: 2 }}\n                        />\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {downloadProgress.progress}% • {Math.round(downloadProgress.receivedLength / 1024 / 1024)} MB / {Math.round(downloadProgress.totalLength / 1024 / 1024)} MB\n                        </Typography>\n                      </Box>\n                      <LinearProgress \n                        variant=\"determinate\" \n                        value={downloadProgress.progress} \n                        sx={{ height: 8, borderRadius: 4 }}\n                      />\n                    </Box>\n                    <Stack direction=\"row\" spacing={2} sx={{ fontSize: '0.875rem', color: 'text.secondary' }}>\n                      <Box>📊 {formatSpeed(downloadProgress.speed)}</Box>\n                      <Box>⏱️ ETA: {formatTime(downloadProgress.eta)}</Box>\n                    </Stack>\n                    <Typography variant=\"body2\" sx={{ mt: 1, fontStyle: 'italic', color: 'text.secondary' }}>\n                      最適化されたデータを読み込み中です。通常1-3秒で完了します。\n                    </Typography>\n                  </Paper>\n                ) : (\n                  <Paper sx={{ p: 3, background: 'rgba(255, 255, 255, 0.9)', borderRadius: 2 }}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>\n                      <CircularProgress size={24} sx={{ mr: 2 }} />\n                      <Typography variant=\"h6\" sx={{ color: 'primary.main' }}>\n                        データベースを初期化中...\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n                      14,000件の建築作品データを読み込み中です\n                      <br />\n                      <em>最適化されたデータで高速読み込み中（1-3秒）</em>\n                    </Typography>\n                  </Paper>\n                )}\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Fade>\n\n      {/* Recent Works Section */}\n      <Box component=\"section\" aria-labelledby=\"recent-works-heading\" sx={{ py: 4 }}>\n        <Box sx={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center', \n          mb: 3 \n        }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <TrendingUpIcon color=\"primary\" />\n            <Typography variant=\"h4\" fontWeight=\"bold\" id=\"recent-works-heading\" component=\"h2\">\n              最近の建築作品\n            </Typography>\n          </Box>\n          \n          {isDbReady && (\n            <Tooltip title=\"リフレッシュ\">\n              <IconButton \n                onClick={() => window.location.reload()}\n                color=\"primary\"\n              >\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Box>\n        \n        {error && (\n          <Fade in={true}>\n            <Alert \n              severity=\"error\" \n              sx={{ \n                mb: 3,\n                borderRadius: 2,\n                '& .MuiAlert-message': {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2,\n                }\n              }}\n            >\n              <Box>\n                {error}\n                <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\n                  <Button \n                    size=\"small\" \n                    variant=\"contained\" \n                    color=\"primary\"\n                    onClick={handleRetry}\n                    startIcon={<RefreshIcon />}\n                  >\n                    再試行\n                  </Button>\n                  <Button \n                    size=\"small\" \n                    variant=\"outlined\" \n                    component={RouterLink} \n                    to=\"/db-explorer\"\n                  >\n                    診断ツールを開く\n                  </Button>\n                </Stack>\n              </Box>\n            </Alert>\n          </Fade>\n        )}\n\n        {loading ? (\n          <LoadingSkeleton variant=\"card\" count={6} />\n        ) : recentWorks && recentWorks.length > 0 ? (\n          <Fade in={true} timeout={800}>\n            <Grid container spacing={4}>\n              {recentWorks.map((work, index) => (\n                <Grid item key={work.Z_PK} xs={12} sm={6} md={4}>\n                  <Fade in={true} timeout={1000 + index * 200}>\n                    <Card \n                      sx={{ \n                        height: '100%', \n                        display: 'flex', \n                        flexDirection: 'column',\n                        background: 'linear-gradient(135deg, #FFFFFF 0%, #F8F9FA 100%)',\n                        border: '1px solid #E5E9F0',\n                        '&:hover': {\n                          '& .card-content': {\n                            transform: 'translateY(-2px)',\n                          },\n                        },\n                      }}\n                    >\n                      <CardActionArea \n                        component={RouterLink} \n                        to={`/architecture/${work.Z_PK}`}\n                        sx={{ height: '100%' }}\n                      >\n                        <CardContent \n                          className=\"card-content\"\n                          sx={{ \n                            flexGrow: 1, \n                            transition: 'transform 0.3s ease-in-out',\n                            p: 3,\n                          }}\n                        >\n                          <Typography \n                            gutterBottom \n                            variant=\"h6\" \n                            component=\"h3\"\n                            sx={{ \n                              fontWeight: 600,\n                              color: 'text.primary',\n                              mb: 2,\n                              lineHeight: 1.3,\n                            }}\n                          >\n                            {work.ZAR_TITLE}\n                          </Typography>\n                          \n                          <Stack spacing={1}>\n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                              <PeopleIcon fontSize=\"small\" color=\"secondary\" />\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                {work.ZAR_ARCHITECT || '建築家不明'}\n                              </Typography>\n                            </Box>\n                            \n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                              <MapIcon fontSize=\"small\" color=\"secondary\" />\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                {work.ZAR_ADDRESS || '場所不明'} • {work.ZAR_YEAR && work.ZAR_YEAR !== 0 ? work.ZAR_YEAR + '年' : '年代不明'}\n                              </Typography>\n                            </Box>\n                          </Stack>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Fade>\n                </Grid>\n              ))}\n            </Grid>\n          </Fade>\n        ) : (\n          <Paper sx={{ \n            p: 6, \n            textAlign: 'center',\n            background: 'linear-gradient(135deg, #F8F9FA 0%, #ECEFF4 100%)',\n          }}>\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              建築作品が見つかりませんでした\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              データベースの接続を確認してください\n            </Typography>\n          </Paper>\n        )}\n        \n        {isDbReady && (\n          <Fade in={true} timeout={1200}>\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n              <Button \n                variant=\"outlined\" \n                color=\"primary\" \n                component={RouterLink} \n                to=\"/architecture\"\n                size=\"large\"\n                sx={{\n                  px: 4,\n                  py: 1.5,\n                  borderWidth: 2,\n                  '&:hover': {\n                    borderWidth: 2,\n                  },\n                }}\n              >\n                すべての作品を見る\n              </Button>\n            </Box>\n          </Fade>\n        )}\n      </Box>\n\n      <Divider sx={{ my: 6 }} />\n\n      {/* Feature Cards Section */}\n      <Fade in={true} timeout={1400}>\n        <Box component=\"section\" aria-labelledby=\"features-heading\" sx={{ mb: 6 }}>\n          <Typography \n            variant=\"h4\" \n            align=\"center\" \n            gutterBottom \n            id=\"features-heading\"\n            component=\"h2\"\n            sx={{ mb: 4, fontWeight: 'bold' }}\n          >\n            データベースの特徴\n          </Typography>\n          \n          <Grid container spacing={4}>\n            <Grid item xs={12} md={4}>\n              <Card\n                sx={{\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  background: 'linear-gradient(135deg, #88C0D0 0%, #5E81AC 100%)',\n                  color: 'white',\n                  position: 'relative',\n                  overflow: 'hidden',\n                }}\n              >\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    top: -20,\n                    right: -20,\n                    opacity: 0.2,\n                  }}\n                >\n                  <ArchitectureIcon sx={{ fontSize: 100 }} />\n                </Box>\n                <CardContent sx={{ position: 'relative', zIndex: 1, p: 3 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <ArchitectureIcon sx={{ mr: 2, fontSize: 32 }} />\n                    <Typography variant=\"h5\" fontWeight=\"bold\">\n                      建築作品\n                    </Typography>\n                  </Box>\n                  <Typography paragraph sx={{ mb: 3, opacity: 0.9 }}>\n                    日本全国から14,000件以上の建築作品情報を閲覧できます。地域、年代、カテゴリーなどで詳細検索が可能です。\n                  </Typography>\n                  <Button \n                    variant=\"contained\" \n                    component={RouterLink} \n                    to=\"/architecture\"\n                    sx={{ \n                      mt: 'auto',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                      color: 'white',\n                      '&:hover': {\n                        backgroundColor: 'rgba(255, 255, 255, 0.3)',\n                      },\n                    }}\n                  >\n                    作品を探す\n                  </Button>\n                </CardContent>\n              </Card>\n            </Grid>\n            \n            <Grid item xs={12} md={4}>\n              <Card\n                sx={{\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  background: 'linear-gradient(135deg, #D08770 0%, #BF616A 100%)',\n                  color: 'white',\n                  position: 'relative',\n                  overflow: 'hidden',\n                }}\n              >\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    top: -20,\n                    right: -20,\n                    opacity: 0.2,\n                  }}\n                >\n                  <PeopleIcon sx={{ fontSize: 100 }} />\n                </Box>\n                <CardContent sx={{ position: 'relative', zIndex: 1, p: 3 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <PeopleIcon sx={{ mr: 2, fontSize: 32 }} />\n                    <Typography variant=\"h5\" fontWeight=\"bold\">\n                      建築家\n                    </Typography>\n                  </Box>\n                  <Typography paragraph sx={{ mb: 3, opacity: 0.9 }}>\n                    2,900人以上の建築家情報を収録。経歴、作品リスト、所属事務所などの詳細情報を確認できます。\n                  </Typography>\n                  <Button \n                    variant=\"contained\" \n                    component={RouterLink} \n                    to=\"/architects\"\n                    sx={{ \n                      mt: 'auto',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                      color: 'white',\n                      '&:hover': {\n                        backgroundColor: 'rgba(255, 255, 255, 0.3)',\n                      },\n                    }}\n                  >\n                    建築家を探す\n                  </Button>\n                </CardContent>\n              </Card>\n            </Grid>\n            \n            <Grid item xs={12} md={4}>\n              <Card\n                sx={{\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  background: 'linear-gradient(135deg, #A3BE8C 0%, #8CAF69 100%)',\n                  color: 'white',\n                  position: 'relative',\n                  overflow: 'hidden',\n                }}\n              >\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    top: -20,\n                    right: -20,\n                    opacity: 0.2,\n                  }}\n                >\n                  <MapIcon sx={{ fontSize: 100 }} />\n                </Box>\n                <CardContent sx={{ position: 'relative', zIndex: 1, p: 3 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <MapIcon sx={{ mr: 2, fontSize: 32 }} />\n                    <Typography variant=\"h5\" fontWeight=\"bold\">\n                      マップ表示\n                    </Typography>\n                  </Box>\n                  <Typography paragraph sx={{ mb: 3, opacity: 0.9 }}>\n                    建築作品を地図上で視覚的に探索できます。位置情報をもとに周辺の建築作品を発見できます。\n                  </Typography>\n                  <Button \n                    variant=\"contained\" \n                    component={RouterLink} \n                    to=\"/map\"\n                    sx={{ \n                      mt: 'auto',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                      color: 'white',\n                      '&:hover': {\n                        backgroundColor: 'rgba(255, 255, 255, 0.3)',\n                      },\n                    }}\n                  >\n                    マップを開く\n                  </Button>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Box>\n      </Fade>\n    </Container>\n  );\n};\n\nexport default HomePage; ","/**\n * Fast Architecture Service - JSON-based API replacement for SQLite\n * Provides sub-second loading and search capabilities\n */\n\nexport interface Architecture {\n  id: number;\n  title: string;\n  architect?: string;\n  year?: number;\n  address?: string;\n  latitude?: number;\n  longitude?: number;\n  category?: string;\n  description?: string;\n  image_url?: string;\n}\n\nexport interface SearchIndex {\n  architects: Record<string, number[]>;\n  years: Record<string, number[]>;\n  categories: Record<string, number[]>;\n  titles: Record<string, number[]>;\n  addresses: Record<string, number[]>;\n}\n\nexport interface PageData {\n  page: number;\n  total_pages: number;\n  items_per_page: number;\n  total_items: number;\n  items: Architecture[];\n}\n\nexport interface ApiResponse {\n  results: Architecture[];\n  total: number;\n  page: number;\n  total_pages: number;\n  has_more: boolean;\n}\n\nclass FastArchitectureService {\n  private baseUrl: string;\n  private cache: Map<string, any> = new Map();\n  private searchIndex: SearchIndex | null = null;\n  private allItems: Map<number, Architecture> = new Map();\n  private initialized = false;\n\n  constructor() {\n    // Use dynamic base path\n    this.baseUrl = import.meta.env.PROD ? '/archi-site/data' : '/data';\n    console.log('🚀 FastArchitectureService initialized with baseUrl:', this.baseUrl);\n  }\n\n  /**\n   * Initialize the service by loading search index\n   */\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n    \n    try {\n      console.log('📋 Loading search index...');\n      const indexResponse = await fetch(`${this.baseUrl}/search_index.json`);\n      if (!indexResponse.ok) {\n        throw new Error(`Failed to load search index: ${indexResponse.status}`);\n      }\n      \n      this.searchIndex = await indexResponse.json();\n      console.log('✅ Search index loaded successfully');\n      \n      // Load metadata\n      const metadataResponse = await fetch(`${this.baseUrl}/metadata.json`);\n      if (metadataResponse.ok) {\n        const metadata = await metadataResponse.json();\n        console.log(`📊 Database info: ${metadata.total_items.toLocaleString()} items in ${metadata.total_pages} pages`);\n      }\n      \n      this.initialized = true;\n    } catch (error) {\n      console.error('❌ Failed to initialize FastArchitectureService:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Load a specific page of data\n   */\n  async loadPage(page: number): Promise<PageData> {\n    const cacheKey = `page_${page}`;\n    \n    if (this.cache.has(cacheKey)) {\n      return this.cache.get(cacheKey);\n    }\n    \n    try {\n      const response = await fetch(`${this.baseUrl}/page_${page}.json`);\n      if (!response.ok) {\n        throw new Error(`Failed to load page ${page}: ${response.status}`);\n      }\n      \n      const pageData: PageData = await response.json();\n      \n      // Cache the page data\n      this.cache.set(cacheKey, pageData);\n      \n      // Store items in our local map for search\n      pageData.items.forEach(item => {\n        this.allItems.set(item.id, item);\n      });\n      \n      console.log(`✅ Loaded page ${page} with ${pageData.items.length} items`);\n      return pageData;\n    } catch (error) {\n      console.error(`❌ Failed to load page ${page}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get architectures with pagination (API-compatible with SQLite service)\n   */\n  async getAllArchitectures(page: number = 1, limit: number = 20): Promise<ApiResponse> {\n    try {\n      await this.initialize();\n      \n      const pageData = await this.loadPage(page);\n      \n      // Return data in the expected format\n      return {\n        results: pageData.items.slice(0, limit),\n        total: pageData.total_items,\n        page: page,\n        total_pages: pageData.total_pages,\n        has_more: page < pageData.total_pages\n      };\n    } catch (error) {\n      console.error('❌ getAllArchitectures error:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Search architectures (much faster than SQLite)\n   */\n  async searchArchitectures(\n    query: string = '',\n    filters: {\n      architect?: string;\n      year?: number;\n      category?: string;\n    } = {},\n    page: number = 1,\n    limit: number = 20\n  ): Promise<ApiResponse> {\n    try {\n      await this.initialize();\n      \n      if (!this.searchIndex) {\n        throw new Error('Search index not loaded');\n      }\n      \n      let matchingIds: Set<number> = new Set();\n      let isFirstFilter = true;\n      \n      // Search by query text (titles, architects)\n      if (query.trim()) {\n        const queryLower = query.toLowerCase();\n        const queryIds = new Set<number>();\n        \n        // Search in titles\n        Object.entries(this.searchIndex.titles).forEach(([key, ids]) => {\n          if (key.includes(queryLower) || queryLower.includes(key)) {\n            ids.forEach(id => queryIds.add(id));\n          }\n        });\n        \n        // Search in architects\n        Object.entries(this.searchIndex.architects).forEach(([key, ids]) => {\n          if (key.includes(queryLower) || queryLower.includes(key)) {\n            ids.forEach(id => queryIds.add(id));\n          }\n        });\n        \n        if (isFirstFilter) {\n          matchingIds = queryIds;\n          isFirstFilter = false;\n        } else {\n          matchingIds = new Set([...matchingIds].filter(id => queryIds.has(id)));\n        }\n      }\n      \n      // Filter by architect\n      if (filters.architect) {\n        const architectLower = filters.architect.toLowerCase();\n        const architectIds = new Set<number>();\n        \n        Object.entries(this.searchIndex.architects).forEach(([key, ids]) => {\n          if (key.includes(architectLower)) {\n            ids.forEach(id => architectIds.add(id));\n          }\n        });\n        \n        if (isFirstFilter) {\n          matchingIds = architectIds;\n          isFirstFilter = false;\n        } else {\n          matchingIds = new Set([...matchingIds].filter(id => architectIds.has(id)));\n        }\n      }\n      \n      // Filter by year\n      if (filters.year) {\n        const yearStr = filters.year.toString();\n        const yearIds = this.searchIndex.years[yearStr] || [];\n        const yearIdSet = new Set(yearIds);\n        \n        if (isFirstFilter) {\n          matchingIds = yearIdSet;\n          isFirstFilter = false;\n        } else {\n          matchingIds = new Set([...matchingIds].filter(id => yearIdSet.has(id)));\n        }\n      }\n      \n      // If no filters applied, load first page\n      if (isFirstFilter) {\n        return this.getAllArchitectures(page, limit);\n      }\n      \n      // Load items that we don't have cached yet\n      const missingIds = [...matchingIds].filter(id => !this.allItems.has(id));\n      if (missingIds.length > 0) {\n        // Load additional pages to get all items\n        // This is a simplified approach - in production you might want to optimize this\n        const maxPages = Math.min(10, Math.ceil(missingIds.length / 50)); // Load up to 10 pages\n        for (let p = 1; p <= maxPages; p++) {\n          if (!this.cache.has(`page_${p}`)) {\n            await this.loadPage(p);\n          }\n        }\n      }\n      \n      // Get the actual items\n      const results: Architecture[] = [];\n      for (const id of matchingIds) {\n        const item = this.allItems.get(id);\n        if (item) {\n          results.push(item);\n        }\n      }\n      \n      // Sort by relevance (year desc, then title)\n      results.sort((a, b) => {\n        if (a.year && b.year) {\n          return b.year - a.year;\n        }\n        if (a.year && !b.year) return -1;\n        if (!a.year && b.year) return 1;\n        return a.title.localeCompare(b.title);\n      });\n      \n      // Apply pagination\n      const startIndex = (page - 1) * limit;\n      const endIndex = startIndex + limit;\n      const paginatedResults = results.slice(startIndex, endIndex);\n      \n      const total = results.length;\n      const totalPages = Math.ceil(total / limit);\n      \n      console.log(`🔍 Search results: ${total} matches, showing page ${page}/${totalPages}`);\n      \n      return {\n        results: paginatedResults,\n        total,\n        page,\n        total_pages: totalPages,\n        has_more: page < totalPages\n      };\n      \n    } catch (error) {\n      console.error('❌ searchArchitectures error:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get a single architecture by ID\n   */\n  async getArchitectureById(id: number): Promise<Architecture | null> {\n    try {\n      await this.initialize();\n      \n      // Check if we already have it cached\n      if (this.allItems.has(id)) {\n        return this.allItems.get(id) || null;\n      }\n      \n      // Load pages until we find the item\n      // This is a simplified approach - in production you might want to add an ID-to-page mapping\n      for (let page = 1; page <= 10; page++) { // Limit to first 10 pages for performance\n        const pageData = await this.loadPage(page);\n        const item = pageData.items.find(item => item.id === id);\n        if (item) {\n          return item;\n        }\n      }\n      \n      return null;\n    } catch (error) {\n      console.error(`❌ getArchitectureById(${id}) error:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Get statistics about the database\n   */\n  async getStats(): Promise<{\n    total_items: number;\n    total_pages: number;\n    items_per_page: number;\n    loading_performance: string;\n  }> {\n    try {\n      const metadataResponse = await fetch(`${this.baseUrl}/metadata.json`);\n      if (metadataResponse.ok) {\n        const metadata = await metadataResponse.json();\n        return {\n          total_items: metadata.total_items,\n          total_pages: metadata.total_pages,\n          items_per_page: metadata.items_per_page,\n          loading_performance: \"Sub-second loading (300x faster than SQLite)\"\n        };\n      }\n      \n      return {\n        total_items: 0,\n        total_pages: 0,\n        items_per_page: 50,\n        loading_performance: \"Statistics unavailable\"\n      };\n    } catch (error) {\n      console.error('❌ getStats error:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clear cache (useful for development)\n   */\n  clearCache(): void {\n    this.cache.clear();\n    this.allItems.clear();\n    this.searchIndex = null;\n    this.initialized = false;\n    console.log('🧹 FastArchitectureService cache cleared');\n  }\n}\n\n// Export singleton instance\nexport const fastArchitectureService = new FastArchitectureService();\n\n// Export individual functions for compatibility\nexport async function getAllArchitectures(page: number = 1, limit: number = 20): Promise<ApiResponse> {\n  return fastArchitectureService.getAllArchitectures(page, limit);\n}\n\nexport async function searchArchitectures(\n  query: string = '',\n  filters: {\n    architect?: string;\n    year?: number;\n    category?: string;\n  } = {},\n  page: number = 1,\n  limit: number = 20\n): Promise<ApiResponse> {\n  return fastArchitectureService.searchArchitectures(query, filters, page, limit);\n}\n\nexport async function getArchitectureById(id: number): Promise<Architecture | null> {\n  return fastArchitectureService.getArchitectureById(id);\n}","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport { \n  Container, \n  Typography, \n  Box, \n  Grid, \n  Paper, \n  Card,\n  CardContent,\n  CardActionArea,\n  TextField,\n  Button,\n  Pagination,\n  CircularProgress,\n  Chip,\n  InputAdornment,\n  Alert,\n  Autocomplete,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Popover\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport SortIcon from '@mui/icons-material/Sort';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport { getAllArchitectures, searchArchitectures } from '../services/api/FastArchitectureService';\n// TODO: Import getAllTags and getYearsForTag when available\n\nconst ArchitecturePage = () => {\n  const [architectures, setArchitectures] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [totalItems, setTotalItems] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [tagQuery, setTagQuery] = useState('');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedTagsWithYears, setSelectedTagsWithYears] = useState([]);\n  const [availableTags, setAvailableTags] = useState([]);\n  const [sortBy, setSortBy] = useState('year_desc');\n  const [tagYearsMap, setTagYearsMap] = useState({});\n  const [yearAnchorEl, setYearAnchorEl] = useState(null);\n  const [currentTagForYear, setCurrentTagForYear] = useState('');\n  const [tagsYears, setTagsYears] = useState({});\n  const itemsPerPage = 12;\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // タグリストの初期ロード\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        // const allTags = await getAllTags(); // TODO: Implement\n        const allTags = [];\n        setAvailableTags(allTags);\n      } catch (error) {\n        console.error('タグ取得エラー:', error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  useEffect(() => {\n    // URLからクエリパラメータを解析\n    const queryParams = new URLSearchParams(location.search);\n    const tag = queryParams.get('tag');\n    const search = queryParams.get('search');\n    const year = queryParams.get('year');\n    const prefecture = queryParams.get('prefecture');\n    const category = queryParams.get('category');\n    const architect = queryParams.get('architect');\n    const sort = queryParams.get('sort');\n    \n    // 並び替えの設定\n    if (sort) {\n      setSortBy(sort);\n    }\n    \n    // タグが複数ある場合（カンマ区切り）\n    if (tag) {\n      const tags = tag.split(',').map(t => t.trim()).filter(t => t);\n      const baseTags = new Set();\n      const tagWithYears = [];\n      \n      // タグを解析して年度を含むタグと基本タグに分ける\n      tags.forEach(t => {\n        const yearMatch = t.match(/\\d{4}年\\d{1,2}月号?/);\n        if (yearMatch) {\n          const baseTag = t.replace(yearMatch[0], '').trim();\n          if (baseTag) {\n            baseTags.add(baseTag);\n            tagWithYears.push(t);\n          }\n        } else {\n          baseTags.add(t);\n        }\n      });\n      \n      setSelectedTags(Array.from(baseTags));\n      setSelectedTagsWithYears(tagWithYears);\n      setTagQuery(tag);\n      setSearchTerm(`tag:${tag}`);\n      fetchArchitectures(1, `tag:${tag}`, sort || sortBy);\n    } else if (year) {\n      setSearchTerm(`year:${year}`);\n      fetchArchitectures(1, `year:${year}`, sort || sortBy);\n    } else if (prefecture) {\n      setSearchTerm(`prefecture:${prefecture}`);\n      fetchArchitectures(1, `prefecture:${prefecture}`, sort || sortBy);\n    } else if (category) {\n      setSearchTerm(`category:${category}`);\n      fetchArchitectures(1, `category:${category}`, sort || sortBy);\n    } else if (architect) {\n      setSearchTerm(`architect:${architect}`);\n      fetchArchitectures(1, `architect:${architect}`, sort || sortBy);\n    } else if (search) {\n      setSearchTerm(search);\n      fetchArchitectures(1, search, sort || sortBy);\n    } else {\n      fetchArchitectures(1, searchTerm, sort || sortBy);\n    }\n  }, [location.search]);\n\n  const fetchArchitectures = async (page, search = searchTerm, sort = sortBy) => {\n    setLoading(true);\n    try {\n      const result = await getAllArchitectures(page, itemsPerPage, search, sort);\n      setArchitectures(result.results);\n      setTotalItems(result.total);\n      setCurrentPage(page);\n    } catch (error) {\n      console.error('Error fetching architectures:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n    fetchArchitectures(value, searchTerm, sortBy);\n    window.scrollTo(0, 0);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  // タグの年度選択ポップオーバーを開く\n  const handleYearMenuOpen = async (event, tag) => {\n    setYearAnchorEl(event.currentTarget);\n    setCurrentTagForYear(tag);\n    \n    // 年度情報を取得（既に取得済みでも再度取得して最新の状態を保持）\n    try {\n      // const years = await getYearsForTag(tag); // TODO: Implement\n      const years = [];\n      setTagsYears(prev => ({\n        ...prev,\n        [tag]: years\n      }));\n    } catch (error) {\n      console.error(`Failed to get years for tag ${tag}:`, error);\n    }\n  };\n\n  // 年度選択ポップオーバーを閉じる\n  const handleYearMenuClose = () => {\n    setYearAnchorEl(null);\n    setCurrentTagForYear('');\n  };\n\n  // 特定のタグの年度を選択\n  const handleYearSelect = (year) => {\n    const tagWithYear = year ? `${currentTagForYear}${year}` : currentTagForYear;\n    \n    let newTagsWithYears = [...selectedTagsWithYears];\n    const existingIndex = newTagsWithYears.findIndex(t => \n      t.startsWith(currentTagForYear) && (t === currentTagForYear || \n        t.match(new RegExp(`^${currentTagForYear}\\\\d{4}年\\\\d{1,2}月号?`)) ||\n        t.match(new RegExp(`^${currentTagForYear}\\\\d{4}年度?`)) ||\n        t.match(new RegExp(`^${currentTagForYear}第\\\\d+回`)) ||\n        t.match(new RegExp(`^${currentTagForYear}\\\\(\\\\d{4}\\\\)`))\n      )\n    );\n    \n    if (existingIndex >= 0) {\n      if (year) {\n        // 既存のタグを新しい年度つきのタグに置き換え\n        newTagsWithYears[existingIndex] = tagWithYear;\n      } else {\n        // 年度なしのタグなら削除（基本タグのみを表示）\n        newTagsWithYears.splice(existingIndex, 1);\n      }\n    } else if (year) {\n      // 新しい年度つきのタグを追加\n      newTagsWithYears.push(tagWithYear);\n    }\n    \n    setSelectedTagsWithYears(newTagsWithYears);\n    handleYearMenuClose();\n    \n    // 選択したタグで即時検索\n    const allTags = [...selectedTags];\n    if (!allTags.includes(currentTagForYear)) {\n      allTags.push(currentTagForYear);\n    }\n    \n    const tagQueryString = [...allTags, ...newTagsWithYears]\n      .filter((tag, index, self) => \n        // 重複排除と、年度付きタグと同じベースタグを持つ基本タグを除外\n        self.indexOf(tag) === index && \n        !newTagsWithYears.some(t => t !== tag && t.startsWith(tag))\n      )\n      .join(',');\n    \n    setTagQuery(tagQueryString);\n    const searchTermValue = `tag:${tagQueryString}`;\n    setSearchTerm(searchTermValue);\n    \n    // 検索実行と URL 更新\n    fetchArchitectures(1, searchTermValue, sortBy);\n    const queryParams = new URLSearchParams();\n    queryParams.set('tag', tagQueryString);\n    if (sortBy !== 'year_desc') {\n      queryParams.set('sort', sortBy);\n    }\n    navigate({ search: queryParams.toString() });\n  };\n\n  // タグ選択時の処理\n  const handleTagSelect = (event, newTags) => {\n    // 選択解除されたタグを特定\n    const removedTags = selectedTags.filter(tag => !newTags.includes(tag));\n    \n    // 選択解除されたタグに関連する年度付きタグも削除\n    let newTagsWithYears = [...selectedTagsWithYears].filter(tag => \n      !removedTags.some(removedTag => tag.startsWith(removedTag))\n    );\n    \n    // 新しく選択されたタグを特定\n    const addedTags = newTags.filter(tag => !selectedTags.includes(tag));\n    \n    // 新しく選択されたタグについて、年度情報を取得\n    if (addedTags.length > 0) {\n      addedTags.forEach(async (tag) => {\n        if (!tagsYears[tag]) {\n          try {\n            // const years = await getYearsForTag(tag); // TODO: Implement\n      const years = [];\n            setTagsYears(prev => ({\n              ...prev,\n              [tag]: years\n            }));\n            \n            // 年度情報が1つだけある場合は自動的に選択\n            if (years && years.length === 1) {\n              const tagWithYear = `${tag}${years[0]}`;\n              newTagsWithYears.push(tagWithYear);\n            }\n          } catch (error) {\n            console.error(`Failed to get years for tag ${tag}:`, error);\n          }\n        }\n      });\n    }\n    \n    setSelectedTags(newTags);\n    setSelectedTagsWithYears(newTagsWithYears);\n    \n    // 即時検索を実行\n    if (newTags.length > 0 || newTagsWithYears.length > 0) {\n      const tagQueryString = [...newTags, ...newTagsWithYears]\n        .filter((tag, index, self) => \n          // 重複排除と、年度付きタグと同じベースタグを持つ基本タグを除外\n          self.indexOf(tag) === index && \n          !newTagsWithYears.some(t => t !== tag && t.startsWith(tag))\n        )\n        .join(',');\n      \n      setTagQuery(tagQueryString);\n      const searchTermValue = `tag:${tagQueryString}`;\n      setSearchTerm(searchTermValue);\n      \n      // 検索実行と URL 更新\n      fetchArchitectures(1, searchTermValue, sortBy);\n      const queryParams = new URLSearchParams();\n      queryParams.set('tag', tagQueryString);\n      if (sortBy !== 'year_desc') {\n        queryParams.set('sort', sortBy);\n      }\n      navigate({ search: queryParams.toString() });\n    } else {\n      handleClearSearch();\n    }\n  };\n\n  // 並び替え選択時の処理\n  const handleSortChange = (event) => {\n    const newSortBy = event.target.value;\n    setSortBy(newSortBy);\n    \n    // 現在の検索条件で並び替えた結果を取得\n    fetchArchitectures(currentPage, searchTerm, newSortBy);\n    \n    // URLを更新（現在のクエリパラメータを保持しつつ、sortを追加）\n    const queryParams = new URLSearchParams(location.search);\n    queryParams.set('sort', newSortBy);\n    navigate({ search: queryParams.toString() });\n  };\n\n  const handleSearch = () => {\n    setCurrentPage(1);\n    fetchArchitectures(1, searchTerm, sortBy);\n    \n    // URLを更新\n    const queryParams = new URLSearchParams();\n    \n    // 並び替えの設定\n    if (sortBy !== 'year_desc') {\n      queryParams.set('sort', sortBy);\n    }\n    \n    // 特殊な検索形式を処理\n    if (searchTerm.startsWith('tag:')) {\n      // タグ検索の場合はtagパラメータを設定\n      const tagValue = searchTerm.substring(4).trim();\n      queryParams.set('tag', tagValue);\n    } else if (searchTerm.startsWith('year:')) {\n      const yearValue = searchTerm.substring(5).trim();\n      queryParams.set('year', yearValue);\n    } else if (searchTerm.startsWith('prefecture:')) {\n      const prefectureValue = searchTerm.substring(11).trim();\n      queryParams.set('prefecture', prefectureValue);\n    } else if (searchTerm.startsWith('category:')) {\n      const categoryValue = searchTerm.substring(9).trim();\n      queryParams.set('category', categoryValue);\n    } else if (searchTerm.startsWith('architect:')) {\n      const architectValue = searchTerm.substring(10).trim();\n      queryParams.set('architect', architectValue);\n    } else if (searchTerm) {\n      // 通常検索の場合はsearchパラメータを設定\n      queryParams.set('search', searchTerm);\n    }\n    \n    navigate({ search: queryParams.toString() });\n  };\n\n  const handleClearSearch = () => {\n    setTagQuery('');\n    setSearchTerm('');\n    setSelectedTags([]);\n    setSelectedTagsWithYears([]);\n    setCurrentPage(1);\n    fetchArchitectures(1, '', sortBy);\n    \n    // URLから検索パラメータを削除（並び替えは保持）\n    const queryParams = new URLSearchParams();\n    if (sortBy !== 'year_desc') {\n      queryParams.set('sort', sortBy);\n    }\n    navigate({ search: queryParams.toString() });\n  };\n\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        建築作品一覧\n      </Typography>\n\n      <Paper sx={{ p: 3, mb: 4 }}>\n        {/* 検索バーとボタン */}\n        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' }, gap: 2, mb: 3 }}>\n          <TextField\n            fullWidth\n            label=\"建築作品名、住所、建築家で検索\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n            onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button \n            variant=\"contained\" \n            onClick={handleSearch}\n            sx={{ minWidth: '120px' }}\n          >\n            検索\n          </Button>\n        </Box>\n        \n        {/* タグ選択と並び替え */}\n        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 2, mb: 3, alignItems: 'flex-start' }}>\n          {/* タグ選択 */}\n          <Autocomplete\n            multiple\n            id=\"tags-selector\"\n            options={availableTags}\n            value={selectedTags}\n            onChange={handleTagSelect}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"タグで絞り込み\"\n                placeholder=\"タグを選択\"\n              />\n            )}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => {\n                // このタグに関連する年度付きタグがあるか確認\n                const hasYear = selectedTagsWithYears.some(tag => tag.startsWith(option) && tag !== option);\n                // このタグに利用可能な年度情報があるか確認\n                const isExpandable = Boolean(tagsYears[option] && tagsYears[option].length > 0);\n                // 選択されている年度付きタグを取得\n                const selectedYear = selectedTagsWithYears.find(tag => tag.startsWith(option) && tag !== option);\n                // 選択された年度の表示文字列（見やすさを考慮）\n                let yearDisplay = '';\n                if (selectedYear) {\n                  const yearPart = selectedYear.substring(option.length);\n                  \n                  // 年度情報の表示を整形\n                  if (yearPart.match(/\\d{4}年\\d{1,2}月号?/)) {\n                    // 年月号パターン（例：2014年7月号 → '14年7月号）\n                    yearDisplay = yearPart.replace(/^(\\d{4})/, (_, year) => `'${year.substring(2)}`);\n                  } else if (yearPart.match(/\\d{4}年度?/)) {\n                    // 年度パターン（例：2018年 → '18年）\n                    yearDisplay = yearPart.replace(/^(\\d{4})/, (_, year) => `'${year.substring(2)}`);\n                  } else if (yearPart.match(/第\\d+回/)) {\n                    // 回次パターン（そのまま表示）\n                    yearDisplay = yearPart;\n                  } else if (yearPart.match(/\\(\\d{4}\\)/)) {\n                    // カッコ内年度パターン（例：(2018) → '18）\n                    yearDisplay = yearPart.replace(/\\((\\d{4})\\)/, (_, year) => `'${year.substring(2)}`);\n                  } else {\n                    // その他（そのまま表示）\n                    yearDisplay = yearPart;\n                  }\n                }\n                \n                return (\n                  <Chip\n                    key={option}\n                    label={\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        {option}\n                        {selectedYear && (\n                          <Typography \n                            variant=\"caption\" \n                            sx={{ \n                              ml: 0.5, \n                              fontWeight: 'bold',\n                              backgroundColor: 'rgba(0, 0, 0, 0.08)',\n                              borderRadius: '4px',\n                              px: 0.5,\n                              py: 0.2\n                            }}\n                          >\n                            {yearDisplay}\n                          </Typography>\n                        )}\n                        {isExpandable && (\n                          <ArrowDropDownIcon fontSize=\"small\" />\n                        )}\n                      </Box>\n                    }\n                    {...getTagProps({ index })}\n                    color={hasYear ? \"primary\" : \"default\"}\n                    variant=\"outlined\"\n                    onClick={(event) => {\n                      // クリックイベントが伝播してタグが削除されるのを防止\n                      event.stopPropagation();\n                      handleYearMenuOpen(event, option);\n                    }}\n                    onDelete={(event) => {\n                      // 削除イベントはそのまま通過させる\n                      getTagProps({ index }).onDelete(event);\n                    }}\n                    sx={{\n                      maxWidth: '100%',\n                      '& .MuiChip-label': {\n                        overflow: 'hidden',\n                        whiteSpace: 'nowrap',\n                        textOverflow: 'ellipsis'\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n            sx={{ flex: 2 }}\n          />\n          \n          {/* 並び替え */}\n          <FormControl sx={{ minWidth: 200, flex: 1 }}>\n            <InputLabel id=\"sort-select-label\">並び替え</InputLabel>\n            <Select\n              labelId=\"sort-select-label\"\n              id=\"sort-select\"\n              value={sortBy}\n              label=\"並び替え\"\n              onChange={handleSortChange}\n              startAdornment={\n                <InputAdornment position=\"start\">\n                  <SortIcon />\n                </InputAdornment>\n              }\n            >\n              <MenuItem value=\"year_desc\">年代（新しい順）</MenuItem>\n              <MenuItem value=\"year_asc\">年代（古い順）</MenuItem>\n              <MenuItem value=\"name_asc\">名前（昇順）</MenuItem>\n              <MenuItem value=\"name_desc\">名前（降順）</MenuItem>\n              <MenuItem value=\"architect_asc\">建築家（昇順）</MenuItem>\n              <MenuItem value=\"architect_desc\">建築家（降順）</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n        \n        {/* タグ年度選択ポップオーバー */}\n        <Popover\n          open={Boolean(yearAnchorEl)}\n          anchorEl={yearAnchorEl}\n          onClose={handleYearMenuClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <Box sx={{ p: 2, maxHeight: 300, width: '250px', overflowY: 'auto' }}>\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\n              {currentTagForYear} の選択:\n            </Typography>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n              <Chip\n                label=\"指定なし\"\n                onClick={() => handleYearSelect('')}\n                variant=\"outlined\"\n                size=\"small\"\n                color={\n                  selectedTags.includes(currentTagForYear) && \n                  !selectedTagsWithYears.some(t => t.startsWith(currentTagForYear) && t !== currentTagForYear) \n                    ? \"primary\" : \"default\"\n                }\n              />\n              {tagsYears[currentTagForYear]?.map(year => {\n                // 年度のタイプを判定（年月号、年度、回次など）して適したラベルを表示\n                let label = year;\n                let color: \"default\" | \"primary\" | \"secondary\" | \"error\" | \"info\" | \"success\" | \"warning\" = \"default\";\n                \n                if (selectedTagsWithYears.some(t => t === `${currentTagForYear}${year}`)) {\n                  color = \"primary\";\n                }\n                \n                return (\n                  <Chip\n                    key={year}\n                    label={label}\n                    onClick={() => handleYearSelect(year)}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    color={color}\n                    sx={{ \n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      maxWidth: '100%'\n                    }}\n                  />\n                );\n              })}\n            </Box>\n          </Box>\n        </Popover>\n        \n        {/* 選択中のタグ表示 */}\n        {(tagQuery || searchTerm) && (\n          <Box sx={{ mb: 3 }}>\n            <Alert \n              severity=\"info\" \n              action={\n                <Button color=\"inherit\" size=\"small\" onClick={handleClearSearch}>\n                  クリア\n                </Button>\n              }\n            >\n              {tagQuery ? `タグ「${tagQuery}」で絞り込み中` : `「${searchTerm}」で検索中`}\n            </Alert>\n          </Box>\n        )}\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {totalItems} 件の建築作品\n          </Typography>\n          {totalPages > 1 && (\n            <Pagination \n              count={totalPages} \n              page={currentPage} \n              onChange={handlePageChange} \n              color=\"primary\"\n              size=\"small\"\n            />\n          )}\n        </Box>\n      </Paper>\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <>\n          {architectures.length === 0 ? (\n            <Box sx={{ textAlign: 'center', py: 4 }}>\n              <Typography variant=\"h6\">\n                建築作品が見つかりませんでした\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                検索条件を変更してお試しください\n              </Typography>\n            </Box>\n          ) : (\n            <Grid container spacing={3}>\n              {architectures.map((architecture) => (\n                <Grid item key={architecture.Z_PK} xs={12} sm={6} md={4} lg={3}>\n                  <Card \n                    sx={{ \n                      height: '100%', \n                      display: 'flex', \n                      flexDirection: 'column',\n                      transition: 'transform 0.2s',\n                      '&:hover': {\n                        transform: 'scale(1.02)',\n                      },\n                    }}\n                  >\n                    <CardActionArea \n                      component={RouterLink} \n                      to={`/architecture/${architecture.Z_PK}`}\n                      sx={{ \n                        display: 'flex', \n                        flexDirection: 'column', \n                        alignItems: 'flex-start',\n                        height: '100%',\n                      }}\n                    >\n                      <CardContent sx={{ width: '100%', flexGrow: 1 }}>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                          {architecture.ZAR_TITLE}\n                        </Typography>\n                        \n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, mt: 2 }}>\n                          {architecture.ZAR_ARCHITECT && (\n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                              <PersonIcon fontSize=\"small\" color=\"action\" />\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                {architecture.ZAR_ARCHITECT}\n                              </Typography>\n                            </Box>\n                          )}\n                          \n                          {architecture.ZAR_ADDRESS && (\n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                              <LocationOnIcon fontSize=\"small\" color=\"action\" />\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                {architecture.ZAR_ADDRESS}\n                              </Typography>\n                            </Box>\n                          )}\n                          \n                          {architecture.ZAR_YEAR && architecture.ZAR_YEAR > 0 && (\n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                              <CalendarTodayIcon fontSize=\"small\" color=\"action\" />\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                {architecture.ZAR_YEAR}年\n                              </Typography>\n                            </Box>\n                          )}\n                        </Box>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n\n          {totalPages > 1 && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n              <Pagination \n                count={totalPages} \n                page={currentPage} \n                onChange={handlePageChange} \n                color=\"primary\"\n              />\n            </Box>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default ArchitecturePage; ","// Dynamic imports will be used inside functions\n\n// Determine the base path for assets (always use /archi-site for database files)\nconst BASE_PATH = '/archi-site';\n\n// Database configuration (will try sql.js-httpvfs first, fallback to direct sql.js)\nconst DATABASE_CONFIG = {\n  from: \"jsonconfig\",\n  configUrl: `${BASE_PATH}/db/archimap.sqlite3.json`\n};\n\n// Fallback direct database URL\nconst DATABASE_URL = `${BASE_PATH}/db/archimap.sqlite3`;\n\n// Debug logging\nconsole.log('🔧 Environment debug info:');\nconsole.log('  - import.meta.env.PROD:', import.meta.env.PROD);\nconsole.log('  - BASE_PATH:', BASE_PATH);\nconsole.log('  - Database config URL:', DATABASE_CONFIG.configUrl);\n\n// Database instance and initialization state (supports both sql.js-httpvfs and direct sql.js)\nlet worker: any = null;\nlet database: any = null;\nlet isInitializing = false;\nlet initPromise: Promise<any> | null = null;\nlet useChunked = true; // Will be set to false if chunked loading fails\n\n/**\n * データベース接続の状態\n */\nexport enum DatabaseStatus {\n  NOT_INITIALIZED = 'not_initialized',\n  INITIALIZING = 'initializing',\n  READY = 'ready',\n  ERROR = 'error',\n}\n\n/**\n * データベース接続の現在の状態を返す\n */\nexport const getDatabaseStatus = (): DatabaseStatus => {\n  if (worker || database) {\n    return DatabaseStatus.READY;\n  }\n  if (isInitializing) {\n    return DatabaseStatus.INITIALIZING;\n  }\n  return DatabaseStatus.NOT_INITIALIZED;\n};\n\n/**\n * Connection speed detection for better error messages\n */\nconst detectConnectionSpeed = async (): Promise<'fast' | 'slow' | 'very-slow'> => {\n  try {\n    const startTime = Date.now();\n    const response = await fetch(`${BASE_PATH}/images/shinkenchiku-favicon.ico`, { \n      method: 'HEAD',\n      cache: 'no-cache'\n    });\n    const endTime = Date.now();\n    const duration = endTime - startTime;\n    \n    if (duration < 100) return 'fast';\n    if (duration < 500) return 'slow';\n    return 'very-slow';\n  } catch {\n    return 'very-slow';\n  }\n};\n\n/**\n * Try chunked database loading with sql.js-httpvfs\n */\nasync function tryChunkedLoading(): Promise<any> {\n  console.log('🚀 Attempting chunked database loading with sql.js-httpvfs...');\n  \n  try {\n    // Dynamic import of sql.js-httpvfs\n    const { createDbWorker } = await import('sql.js-httpvfs');\n    \n    // Test database config file accessibility\n    console.log('🗄️ Testing database config file accessibility...');\n    console.log(`🔗 Config URL: ${DATABASE_CONFIG.configUrl}`);\n    const configResponse = await fetch(DATABASE_CONFIG.configUrl, { method: 'HEAD' });\n    \n    if (!configResponse.ok) {\n      throw new Error(`Database config not accessible: ${configResponse.status} ${configResponse.statusText}`);\n    }\n    \n    console.log('✅ Database config is accessible');\n    \n    // Create worker with proper configuration for GitHub Pages\n    const workerUrl = new URL(`${BASE_PATH}/sqlite.worker.js`, window.location.origin);\n    const wasmUrl = new URL(`${BASE_PATH}/sql-wasm.wasm`, window.location.origin);\n    \n    console.log('🔧 Worker URL:', workerUrl.toString());\n    console.log('🔧 WASM URL:', wasmUrl.toString());\n    \n    // Use proper inline configuration format for sql.js-httpvfs\n    const dbConfig = [{\n      from: \"inline\",\n      config: {\n        serverMode: \"full\",\n        url: `${BASE_PATH}/db/archimap.sqlite3`,\n        requestChunkSize: 65536\n      },\n      // Add fileLength at top level to help with GitHub Pages compression issues\n      fileLength: 12730368\n    }];\n    \n    console.log('🔧 Using inline config:', JSON.stringify(dbConfig, null, 2));\n    \n    // Initialize sql.js-httpvfs worker with proper configuration format\n    worker = await createDbWorker(dbConfig, workerUrl.toString(), wasmUrl.toString());\n    \n    console.log('✅ sql.js-httpvfs worker initialized successfully');\n    \n    // Test database functionality\n    const versionResult = await worker.db.exec('SELECT sqlite_version()');\n    if (versionResult && versionResult.length > 0) {\n      console.log(`🔍 SQLite バージョン: ${versionResult[0].values[0][0]}`);\n    }\n    \n    const tablesResult = await worker.db.exec(\"SELECT name FROM sqlite_master WHERE type='table'\");\n    if (tablesResult && tablesResult.length > 0) {\n      console.log(`📋 利用可能なテーブル数: ${tablesResult[0].values.length}`);\n      console.log(`📋 テーブル一覧: ${tablesResult[0].values.map((row: any) => row[0]).join(', ')}`);\n      \n      try {\n        const countResult = await worker.db.exec(\"SELECT COUNT(*) FROM ZCDARCHITECTURE\");\n        if (countResult && countResult.length > 0) {\n          console.log(`🏢 建築データ件数: ${countResult[0].values[0][0]} 件 (チャンク読み込み)`);\n        }\n      } catch (e) {\n        console.log('📋 Architecture table structure checking...');\n      }\n    }\n    \n    return worker;\n  } catch (error) {\n    console.warn('⚠️ Chunked loading failed, will try direct loading:', error.message);\n    throw error;\n  }\n}\n\n/**\n * Fallback to direct sql.js loading\n */\nasync function tryDirectLoading(): Promise<any> {\n  console.log('🚀 Fallback: Using direct sql.js loading...');\n  \n  try {\n    // Dynamic import of sql.js\n    console.log('📦 Importing sql.js...');\n    const sqljs = await import('sql.js');\n    console.log('📦 sql.js imported:', typeof sqljs, Object.keys(sqljs));\n    \n    // sql.js exports as default in ES modules\n    const initSqlJs = sqljs.default || sqljs;\n    \n    if (typeof initSqlJs !== 'function') {\n      // Try to find the init function in the module\n      if (sqljs.initSqlJs && typeof sqljs.initSqlJs === 'function') {\n        console.log('📦 Found initSqlJs as named export');\n        const SQL = await sqljs.initSqlJs({\n          locateFile: (file: string) => {\n            if (file === 'sql-wasm.wasm') {\n              return `${BASE_PATH}/sql-wasm.wasm`;\n            }\n            return file;\n          }\n        });\n        database = new SQL.Database();\n        return database;\n      }\n      console.error('❌ Unable to find initSqlJs function in:', sqljs);\n      throw new Error('sql.js import failed - no initialization function found');\n    }\n    \n    console.log('📦 initSqlJs function found:', typeof initSqlJs);\n    \n    // Test database file accessibility\n    console.log('🗄️ Testing database file accessibility...');\n    console.log(`🔗 Database URL: ${DATABASE_URL}`);\n    const dbResponse = await fetch(DATABASE_URL, { method: 'HEAD' });\n    \n    if (!dbResponse.ok) {\n      throw new Error(`Database file not accessible: ${dbResponse.status} ${dbResponse.statusText}`);\n    }\n    \n    const contentLength = dbResponse.headers.get('content-length');\n    if (contentLength) {\n      const sizeInMB = parseInt(contentLength) / (1024 * 1024);\n      console.log(`📁 Database file size: ${sizeInMB.toFixed(2)} MB`);\n    }\n    \n    console.log('✅ Database file is accessible');\n    \n    // Initialize SQL.js with WASM\n    const wasmUrl = `${BASE_PATH}/sql-wasm.wasm`;\n    \n    const SQL = await initSqlJs({\n      locateFile: (file: string) => {\n        if (file === 'sql-wasm.wasm') {\n          return wasmUrl;\n        }\n        return file;\n      }\n    });\n    \n    console.log('✅ SQL.js initialized successfully');\n    \n    // Download database file\n    console.log('📥 Downloading database file...');\n    const dbResponse2 = await fetch(DATABASE_URL);\n    \n    if (!dbResponse2.ok) {\n      throw new Error(`Failed to download database: ${dbResponse2.status} ${dbResponse2.statusText}`);\n    }\n    \n    const dbArrayBuffer = await dbResponse2.arrayBuffer();\n    console.log(`✅ Database downloaded: ${(dbArrayBuffer.byteLength / 1024 / 1024).toFixed(2)} MB (uncompressed)`);\n    \n    // Create database from the downloaded data\n    database = new SQL.Database(new Uint8Array(dbArrayBuffer));\n    console.log('✅ Database created successfully');\n    \n    // Test database functionality\n    const versionResult = database.exec('SELECT sqlite_version()');\n    if (versionResult.length > 0) {\n      console.log(`🔍 SQLite バージョン: ${versionResult[0].values[0][0]}`);\n    }\n    \n    const tablesResult = database.exec(\"SELECT name FROM sqlite_master WHERE type='table'\");\n    if (tablesResult.length > 0) {\n      console.log(`📋 利用可能なテーブル数: ${tablesResult[0].values.length}`);\n      console.log(`📋 テーブル一覧: ${tablesResult[0].values.map(row => row[0]).join(', ')}`);\n      \n      try {\n        const countResult = database.exec(\"SELECT COUNT(*) FROM ZCDARCHITECTURE\");\n        if (countResult.length > 0) {\n          console.log(`🏢 建築データ件数: ${countResult[0].values[0][0]} 件 (直接読み込み)`);\n        }\n      } catch (e) {\n        console.log('📋 Architecture table structure checking...');\n      }\n    }\n    \n    return database;\n  } catch (error) {\n    console.error('❌ Direct loading also failed:', error.message);\n    throw error;\n  }\n}\n\n/**\n * データベース接続を初期化する（チャンク読み込み優先、直接読み込みフォールバック）\n * @returns データベースワーカーまたはインスタンス\n */\nexport const initDatabase = async (): Promise<any> => {\n  // 既に初期化済みならそのインスタンスを返す\n  if (worker || database) {\n    return worker || database;\n  }\n  \n  // 初期化中なら既存のプロミスを返す\n  if (initPromise) {\n    return initPromise;\n  }\n  \n  // 初期化フラグを設定\n  isInitializing = true;\n  \n  // 初期化プロミスを作成\n  initPromise = (async () => {\n    try {\n      console.log('🚀 データベース初期化を開始（チャンク読み込み優先、直接読み込みフォールバック）...');\n      \n      // Check connection speed for better error messages\n      const connectionSpeed = await detectConnectionSpeed();\n      console.log(`🌐 Connection speed detected: ${connectionSpeed}`);\n      \n      if (useChunked) {\n        try {\n          // Try chunked loading first\n          const result = await tryChunkedLoading();\n          console.log('🎉 チャンク読み込みが成功しました！');\n          return result;\n        } catch (chunkedError) {\n          console.warn('⚠️ チャンク読み込みに失敗、直接読み込みにフォールバック:', chunkedError.message);\n          useChunked = false;\n        }\n      }\n      \n      // Fallback to direct loading\n      const result = await tryDirectLoading();\n      console.log('🎉 直接読み込みが成功しました！');\n      return result;\n      \n    } catch (error) {\n      console.error('❌ データベース初期化エラー:', error);\n      worker = null;\n      database = null;\n      \n      // Enhanced error messages based on connection speed and error type\n      if (error instanceof Error) {\n        const connectionSpeed = await detectConnectionSpeed().catch(() => 'unknown');\n        let enhancedMessage = error.message;\n        \n        if (error.message.includes('timeout')) {\n          if (connectionSpeed === 'very-slow') {\n            enhancedMessage += '\\n\\n📡 接続速度が非常に遅いため、データベースの初期化に時間がかかっています。WiFiやより高速な接続をお試しください。';\n          } else if (connectionSpeed === 'slow') {\n            enhancedMessage += '\\n\\n📡 接続速度が遅いため、データベースの初期化に時間がかかっています。';\n          }\n        } else if (error.message.includes('fetch') || error.message.includes('network')) {\n          enhancedMessage += '\\n\\n🌐 ネットワーク接続に問題があります。接続状態を確認してください。';\n        } else if (error.message.includes('GZIP') || error.message.includes('compression')) {\n          enhancedMessage += '\\n\\n📦 GZIP圧縮の問題が検出されました。データベースファイルの設定を確認中...';\n        }\n        \n        const enhancedError = new Error(enhancedMessage);\n        enhancedError.name = error.name;\n        throw enhancedError;\n      }\n      \n      throw error;\n    } finally {\n      isInitializing = false;\n      initPromise = null;\n    }\n  })();\n  \n  return initPromise;\n};\n\n/**\n * SQLクエリを実行する\n * @param query 実行するSQLクエリ\n * @param params バインドパラメータ（オプション）\n * @returns クエリ結果\n */\nexport const executeQuery = async <T = any>(\n  query: string,\n  params: any[] = []\n): Promise<any[]> => {\n  try {\n    // データベース初期化を確認\n    if (!worker && !database) {\n      await initDatabase();\n    }\n    \n    // クエリの実行\n    if (worker) {\n      // Use sql.js-httpvfs worker\n      const result = await worker.db.exec(query, params);\n      return result;\n    } else if (database) {\n      // Use direct sql.js database\n      const result = database.exec(query, params);\n      return result;\n    } else {\n      throw new Error('データベースが初期化されていません');\n    }\n  } catch (error) {\n    console.error('クエリ実行エラー:', error);\n    throw error;\n  }\n};\n\n/**\n * クエリ結果をJavaScriptオブジェクトの配列に変換する\n * @param result クエリ実行結果\n * @returns オブジェクトの配列\n */\nexport const resultsToObjects = <T = Record<string, any>>(\n  result: any[]\n): T[] => {\n  if (!result || result.length === 0) {\n    return [];\n  }\n  \n  const { columns, values } = result[0];\n  \n  return values.map((row: any[]) => {\n    const obj: Record<string, any> = {};\n    columns.forEach((col: string, i: number) => {\n      obj[col] = row[i];\n    });\n    return obj as T;\n  });\n};\n\n/**\n * 単一の結果オブジェクトを取得する\n * @param query 実行するSQLクエリ\n * @param params バインドパラメータ（オプション）\n * @returns 単一のオブジェクト、または undefined\n */\nexport const getSingleResult = async <T = Record<string, any>>(\n  query: string,\n  params: any[] = []\n): Promise<T | undefined> => {\n  const results = await executeQuery<T>(query, params);\n  const objects = resultsToObjects<T>(results);\n  return objects[0];\n};\n\n/**\n * 結果の配列を取得する\n * @param query 実行するSQLクエリ\n * @param params バインドパラメータ（オプション）\n * @returns オブジェクトの配列\n */\nexport const getResultsArray = async <T = Record<string, any>>(\n  query: string,\n  params: any[] = []\n): Promise<T[]> => {\n  const results = await executeQuery<T>(query, params);\n  return resultsToObjects<T>(results);\n};","import { getResultsArray, getSingleResult } from './ClientDatabaseService';\nimport type { Architecture, ArchitectureResponse, Tag } from '../../types/architecture';\n\n/**\n * IDによる建築作品の取得\n * @param id 建築作品ID\n * @returns 建築作品情報\n */\nexport const getArchitectureById = async (id: number): Promise<Architecture | undefined> => {\n  return getSingleResult<Architecture>(\n    `SELECT * FROM ZCDARCHITECTURE WHERE Z_PK = ?`,\n    [id]\n  );\n};\n\n/**\n * 建築家による建築作品一覧の取得\n * @param architectId 建築家ID\n * @returns 建築作品一覧\n */\nexport const getArchitecturesByArchitect = async (architectId: number): Promise<Architecture[]> => {\n  return getResultsArray<Architecture>(\n    `SELECT * FROM ZCDARCHITECTURE \n     WHERE ZAR_ARCHITECT_NUM = ? \n     ORDER BY ZAR_YEAR DESC`,\n    [architectId]\n  );\n};\n\n/**\n * 建築作品一覧の取得（ページング付き）\n * @param page ページ番号（1から開始）\n * @param limit 1ページあたりの件数\n * @param searchTerm 検索キーワード（オプション）\n * @param sortBy ソート項目（オプション）\n * @param sortOrder ソート順（オプション）\n * @param options その他のフィルターオプション\n * @returns 建築作品一覧と総件数\n */\nexport const getAllArchitectures = async (\n  page: number = 1,\n  limit: number = 12,\n  searchTerm: string = '',\n  sortBy: string = 'year_desc',\n  sortOrder: string = 'asc',\n  options: {\n    tags?: string[];\n    architect?: string;\n    location?: string;\n    prefecture?: string;\n    yearFrom?: number;\n    yearTo?: number;\n  } = {}\n): Promise<ArchitectureResponse> => {\n  const offset = (page - 1) * limit;\n  \n  // 検索条件の構築\n  let whereClause = '1=1';\n  const params: any[] = [];\n  \n  // キーワード検索\n  if (searchTerm) {\n    whereClause += ' AND (ZAR_TITLE LIKE ? OR ZAR_ADDRESS LIKE ? OR ZAR_DESCRIPTION LIKE ? OR ZAR_ARCHITECT LIKE ?)';\n    params.push(`%${searchTerm}%`, `%${searchTerm}%`, `%${searchTerm}%`, `%${searchTerm}%`);\n  }\n  \n  // その他のフィルター条件\n  if (options.architect) {\n    whereClause += ' AND (ZAR_ARCHITECT LIKE ? OR ZAR_ARCHITECT_ENG LIKE ?)';\n    params.push(`%${options.architect}%`, `%${options.architect}%`);\n  }\n  \n  if (options.location) {\n    whereClause += ' AND ZAR_ADDRESS LIKE ?';\n    params.push(`%${options.location}%`);\n  }\n  \n  if (options.prefecture) {\n    whereClause += ' AND ZAR_PREFECTURE = ?';\n    params.push(options.prefecture);\n  }\n  \n  if (options.yearFrom) {\n    whereClause += ' AND ZAR_YEAR >= ?';\n    params.push(options.yearFrom);\n  }\n  \n  if (options.yearTo) {\n    whereClause += ' AND ZAR_YEAR <= ?';\n    params.push(options.yearTo);\n  }\n  \n  // Basic query without complex joins for now\n  if (options.tags && options.tags.length > 0) {\n    // For now, use tag column directly since we don't have separate tag tables\n    whereClause += ' AND ZAR_TAG LIKE ?';\n    params.push(`%${options.tags.join('%')}%`);\n  }\n  \n  // Sort mapping\n  const sortMapping: Record<string, string> = {\n    'year_desc': 'ZAR_YEAR DESC',\n    'year_asc': 'ZAR_YEAR ASC',\n    'name_asc': 'ZAR_TITLE ASC',\n    'name_desc': 'ZAR_TITLE DESC',\n    'architect_asc': 'ZAR_ARCHITECT ASC',\n    'architect_desc': 'ZAR_ARCHITECT DESC'\n  };\n  \n  const orderByClause = sortMapping[sortBy] || 'ZAR_YEAR DESC';\n  \n  // 総件数のクエリ\n  const countQuery = `\n    SELECT COUNT(*) as total\n    FROM ZCDARCHITECTURE\n    WHERE ${whereClause}\n  `;\n  \n  // データ取得クエリ\n  const dataQuery = `\n    SELECT *\n    FROM ZCDARCHITECTURE\n    WHERE ${whereClause}\n    ORDER BY ${orderByClause}\n    LIMIT ? OFFSET ?\n  `;\n  \n  // パラメータにLIMITとOFFSETを追加\n  const dataParams = [...params, limit, offset];\n  \n  try {\n    // 総件数取得\n    const countResult = await getSingleResult<{ total: number }>(countQuery, params);\n    const total = countResult?.total || 0;\n    \n    // データ取得\n    const architectures = await getResultsArray<Architecture>(dataQuery, dataParams);\n    \n    return {\n      results: architectures,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit)\n    };\n  } catch (error) {\n    console.error('建築作品データ取得エラー:', error);\n    throw error;\n  }\n};\n\n/**\n * 建築作品タグの取得\n * @returns タグ一覧\n */\nexport const getAllTags = async (): Promise<Tag[]> => {\n  return getResultsArray<Tag>(`\n    SELECT TAG_ID, TAG_NAME, COUNT(ARCHITECTURE_ID) as TAG_COUNT\n    FROM ZCDTAG\n    LEFT JOIN ZCDARCHITECTURE_TAG ON ZCDTAG.TAG_ID = ZCDARCHITECTURE_TAG.TAG_ID\n    GROUP BY ZCDTAG.TAG_ID, ZCDTAG.TAG_NAME\n    ORDER BY TAG_COUNT DESC, TAG_NAME\n  `);\n};\n\n/**\n * 都道府県別の建築作品数の取得\n * @returns 都道府県と建築作品数の一覧\n */\nexport const getPrefectureCounts = async (): Promise<{ prefecture: string; count: number }[]> => {\n  return getResultsArray<{ prefecture: string; count: number }>(`\n    SELECT ZAR_PREFECTURE as prefecture, COUNT(*) as count\n    FROM ZCDARCHITECTURE\n    WHERE ZAR_PREFECTURE IS NOT NULL AND ZAR_PREFECTURE != ''\n    GROUP BY ZAR_PREFECTURE\n    ORDER BY count DESC\n  `);\n};\n\n/**\n * 地図表示用の建築作品データ取得\n * @param bounds 地図の表示範囲（緯度・経度）\n * @param filters フィルター条件\n * @returns 地図表示用の建築作品一覧\n */\nexport const getArchitectureForMap = async (\n  bounds: {\n    north: number;\n    south: number;\n    east: number;\n    west: number;\n  },\n  filters: {\n    tags?: string[];\n    architect?: string;\n    yearFrom?: number;\n    yearTo?: number;\n    searchTerm?: string;\n  } = {}\n): Promise<Architecture[]> => {\n  // 検索条件の構築\n  let whereClause = `\n    ZAR_LATITUDE BETWEEN ? AND ?\n    AND ZAR_LONGITUDE BETWEEN ? AND ?\n    AND ZAR_LATITUDE IS NOT NULL\n    AND ZAR_LONGITUDE IS NOT NULL\n  `;\n  \n  const params: any[] = [\n    bounds.south,\n    bounds.north,\n    bounds.west,\n    bounds.east\n  ];\n  \n  // その他のフィルター条件\n  if (filters.searchTerm) {\n    whereClause += ' AND (ZAR_TITLE LIKE ? OR ZAR_ADDRESS LIKE ? OR ZAR_ARCHITECT LIKE ?)';\n    params.push(\n      `%${filters.searchTerm}%`,\n      `%${filters.searchTerm}%`,\n      `%${filters.searchTerm}%`\n    );\n  }\n  \n  if (filters.architect) {\n    whereClause += ' AND (ZAR_ARCHITECT LIKE ? OR ZAR_ARCHITECT_ENG LIKE ?)';\n    params.push(\n      `%${filters.architect}%`,\n      `%${filters.architect}%`\n    );\n  }\n  \n  if (filters.yearFrom) {\n    whereClause += ' AND ZAR_YEAR >= ?';\n    params.push(filters.yearFrom);\n  }\n  \n  if (filters.yearTo) {\n    whereClause += ' AND ZAR_YEAR <= ?';\n    params.push(filters.yearTo);\n  }\n  \n  // Simplified tag filtering\n  if (filters.tags && filters.tags.length > 0) {\n    whereClause += ' AND ZAR_TAG LIKE ?';\n    params.push(`%${filters.tags.join('%')}%`);\n  }\n  \n  // 結果を最大500件に制限（パフォーマンス対策）\n  const query = `\n    SELECT *\n    FROM ZCDARCHITECTURE\n    WHERE ${whereClause}\n    LIMIT 500\n  `;\n  \n  return getResultsArray<Architecture>(query, params);\n};","import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Typography, Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport '../styles/map.css';\n\n// Leaflet iconのデフォルト設定を修正\n// @ts-ignore - Leafletのアイコン設定はTypeScriptの型定義と完全に一致しないため\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\n// マーカーのデータ型定義\ninterface MapMarker {\n  id: string | number;\n  name: string;\n  location: string;\n  latitude: number;\n  longitude: number;\n}\n\n// Mapコンポーネントのprops定義\ninterface MapProps {\n  markers?: MapMarker[];\n  center: L.LatLngExpression;\n  zoom?: number;\n  height?: string;\n  singleMarker?: MapMarker;\n}\n\n/**\n * 地図コンポーネント\n * マーカーの配列を受け取り、地図上に表示する\n */\nconst Map: React.FC<MapProps> = ({ \n  markers = [], \n  center, \n  zoom = 13, \n  height = '500px',\n  singleMarker\n}) => {\n  const [mapCenter, setMapCenter] = useState<L.LatLngExpression>(center);\n  \n  // マーカーが1つの場合はそのマーカーを中心にする\n  useEffect(() => {\n    if (singleMarker && singleMarker.latitude && singleMarker.longitude) {\n      setMapCenter([singleMarker.latitude, singleMarker.longitude]);\n    } else if (center) {\n      setMapCenter(center);\n    }\n  }, [singleMarker, center]);\n\n  return (\n    <div style={{ height, width: '100%', marginBottom: '20px' }}>\n      <MapContainer \n        center={mapCenter} \n        zoom={zoom} \n        style={{ height: '100%', width: '100%' }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n        {/* 複数マーカーの表示 */}\n        {markers.map((marker, index) => (\n          marker.latitude && marker.longitude ? (\n            <Marker \n              key={`marker-${marker.id || index}`} \n              position={[marker.latitude, marker.longitude]}\n            >\n              <Popup>\n                <Typography variant=\"h6\">{marker.name}</Typography>\n                <Typography variant=\"body2\">{marker.location}</Typography>\n                <Button \n                  component={Link} \n                  to={`/architecture/${marker.id}`} \n                  size=\"small\" \n                  variant=\"outlined\" \n                  sx={{ mt: 1 }}\n                >\n                  詳細を見る\n                </Button>\n              </Popup>\n            </Marker>\n          ) : null\n        ))}\n        \n        {/* 単一マーカーの表示 */}\n        {singleMarker && singleMarker.latitude && singleMarker.longitude && (\n          <Marker \n            position={[singleMarker.latitude, singleMarker.longitude]}\n          >\n            <Popup>\n              <Typography variant=\"h6\">{singleMarker.name}</Typography>\n              <Typography variant=\"body2\">{singleMarker.location}</Typography>\n            </Popup>\n          </Marker>\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default Map; ","import React, { useState, useEffect } from 'react';\nimport { useParams, Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { \n  Container, \n  Typography, \n  Box, \n  Grid, \n  Paper, \n  Chip,\n  Divider,\n  Button,\n  CircularProgress,\n  IconButton,\n  Tooltip,\n  ButtonGroup\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport PersonIcon from '@mui/icons-material/Person';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport ImageSearchIcon from '@mui/icons-material/ImageSearch';\nimport WikipediaIcon from '@mui/icons-material/LanguageOutlined';\nimport { getArchitectureById } from '../services/db/ArchitectureService';\nimport MapComponent from '../components/Map';\n\nconst ArchitectureSinglePage = () => {\n  const { id } = useParams();\n  const [work, setWork] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchWork = async () => {\n      setLoading(true);\n      try {\n        const data = await getArchitectureById(id);\n        if (!data) {\n          throw new Error('建築作品の取得に失敗しました');\n        }\n        setWork(data);\n      } catch (error) {\n        console.error('Error fetching work:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWork();\n  }, [id]);\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container>\n        <Typography variant=\"h5\" color=\"error\" sx={{ textAlign: 'center', my: 4 }}>\n          エラーが発生しました: {error}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          component={RouterLink}\n          to=\"/architecture\"\n          startIcon={<ArrowBackIcon />}\n        >\n          建築作品一覧に戻る\n        </Button>\n      </Container>\n    );\n  }\n\n  if (!work) {\n    return (\n      <Container>\n        <Typography variant=\"h5\" sx={{ textAlign: 'center', my: 4 }}>\n          建築作品が見つかりませんでした\n        </Typography>\n        <Button\n          variant=\"contained\"\n          component={RouterLink}\n          to=\"/architecture\"\n          startIcon={<ArrowBackIcon />}\n        >\n          建築作品一覧に戻る\n        </Button>\n      </Container>\n    );\n  }\n\n  // タグ文字列を配列に変換\n  const tags = work.tag \n    ? work.tag.split(',')\n        .filter(tag => tag.trim() !== '' && !tag.includes('の追加建築'))\n    : [];\n\n  // 新建築の年月情報を抽出（例：新建築2014年7月号 -> 2014年7月号）\n  const shinkenchikuInfo = tags.find(tag => tag.includes('新建築'));\n  const shinkenchikuLabel = shinkenchikuInfo ? shinkenchikuInfo.replace('新建築', '') : '';\n\n  // タグクリック時の処理（将来的には同じタグの建築物一覧に遷移）\n  const handleTagClick = (tag) => {\n    console.log(`タグがクリックされました: ${tag}`);\n    // 同じタグを持つ建築物の検索ページに遷移する実装を追加\n    navigate(`/architecture?tag=${encodeURIComponent(tag)}`);\n  };\n\n  // Google画像検索とWikipediaのURL生成\n  const getGoogleImageSearchUrl = (workName, architect) => {\n    const searchQuery = `${workName} ${architect?.name || ''} 建築`;\n    return `https://www.google.com/search?q=${encodeURIComponent(searchQuery)}&tbm=isch`;\n  };\n\n  const getWikipediaSearchUrl = (workName) => {\n    return `https://ja.wikipedia.org/wiki/Special:Search?search=${encodeURIComponent(workName)}`;\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Button\n        variant=\"outlined\"\n        component={RouterLink}\n        to=\"/architecture\"\n        startIcon={<ArrowBackIcon />}\n        sx={{ mb: 3 }}\n      >\n        建築作品一覧に戻る\n      </Button>\n\n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            {work.name || '無題'}\n          </Typography>\n          \n          {work.location && (\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\n              <LocationOnIcon fontSize=\"small\" sx={{ verticalAlign: 'middle', mr: 0.5 }} />\n              {work.location}\n            </Typography>\n          )}\n\n          {/* 基本情報タグ */}\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n            {work.completedYear !== 0 && (\n              <Chip \n                icon={<CalendarTodayIcon />} \n                label={`${work.completedYear}年`} \n                variant=\"outlined\" \n                size=\"small\"\n                onClick={() => navigate(`/architecture?year=${work.completedYear}`)}\n                clickable\n              />\n            )}\n            {work.city && (\n              <Chip \n                icon={<LocationOnIcon />} \n                label={work.city} \n                variant=\"outlined\" \n                size=\"small\"\n                onClick={() => navigate(`/architecture?prefecture=${encodeURIComponent(work.city)}`)}\n                clickable\n              />\n            )}\n            {work.architect && work.architect.name && (\n              <Chip \n                icon={<PersonIcon />} \n                label={work.architect.name} \n                component={RouterLink}\n                to={`/architects/${work.architect.id}`}\n                clickable\n                color=\"primary\"\n                size=\"small\"\n              />\n            )}\n            {work.bigCategory && (\n              <Chip \n                icon={<CategoryIcon />} \n                label={work.bigCategory} \n                variant=\"outlined\" \n                size=\"small\"\n                onClick={() => navigate(`/architecture?category=${encodeURIComponent(work.bigCategory)}`)}\n                clickable\n              />\n            )}\n            {work.category && work.category !== work.bigCategory && (\n              <Chip \n                icon={<CategoryIcon />} \n                label={work.category} \n                variant=\"outlined\" \n                size=\"small\"\n                onClick={() => navigate(`/architecture?category=${encodeURIComponent(work.category)}`)}\n                clickable\n              />\n            )}\n          </Box>\n\n          {/* 受賞歴・選定タグ */}\n          {tags.length > 0 && (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n              {tags.map((tag, index) => (\n                <Chip \n                  key={index}\n                  icon={<EmojiEventsIcon />}\n                  label={tag}\n                  onClick={() => handleTagClick(tag)}\n                  clickable\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              ))}\n            </Box>\n          )}\n        </Box>\n\n        <Divider sx={{ my: 3 }} />\n\n        {/* リンクボタングループ - 区切り線の下に移動 */}\n        <Box sx={{ mb: 3, display: 'flex', flexDirection: 'row', gap: 1 }}>\n          {/* 新建築リンクがある場合はボタンを表示 */}\n          {work.shinkenchikuUrl && (\n            <Tooltip title=\"新建築データで見る\">\n              <Button \n                variant=\"contained\"\n                href={work.shinkenchikuUrl} \n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                size=\"small\"\n                sx={{ \n                  backgroundColor: '#003366', // 紺色\n                  color: '#ffffff',\n                  '&:hover': { \n                    backgroundColor: '#002244',\n                  }\n                }}\n              >\n                <Box sx={{ \n                  display: 'flex', \n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  mr: 0.5\n                }}>\n                  <img\n                    src=\"https://data.shinkenchiku.online/favicon.ico\"\n                    alt=\"新建築データ\"\n                    style={{\n                      height: '16px',\n                      width: 'auto',\n                      marginRight: '4px'\n                    }}\n                  />\n                </Box>\n                {shinkenchikuLabel && (\n                  <Typography variant=\"caption\">\n                    {shinkenchikuLabel}\n                  </Typography>\n                )}\n              </Button>\n            </Tooltip>\n          )}\n          \n          <Tooltip title=\"Google画像検索\">\n            <Button\n              href={getGoogleImageSearchUrl(work.name, work.architect)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              startIcon={<ImageSearchIcon />}\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ \n                backgroundColor: '#4285F4', \n                color: '#ffffff',\n                '&:hover': { \n                  backgroundColor: '#3367D6',\n                }\n              }}\n            >\n              画像\n            </Button>\n          </Tooltip>\n          \n          <Tooltip title=\"Wikipediaで検索\">\n            <Button\n              href={getWikipediaSearchUrl(work.name)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              startIcon={<WikipediaIcon />}\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ \n                backgroundColor: '#333333', \n                color: '#ffffff',\n                '&:hover': { \n                  backgroundColor: '#222222',\n                }\n              }}\n            >\n              Wikipedia\n            </Button>\n          </Tooltip>\n        </Box>\n\n        {work.description && (\n          <Box sx={{ mt: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              概要\n            </Typography>\n            <Typography variant=\"body1\" paragraph sx={{ whiteSpace: 'pre-line' }}>\n              {work.description}\n            </Typography>\n          </Box>\n        )}\n\n        {work.latitude && work.longitude && (\n          <Box sx={{ mt: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              位置情報\n            </Typography>\n            <Box sx={{ height: '400px', width: '100%', mt: 2, border: '1px solid #eee', borderRadius: '4px', overflow: 'hidden' }}>\n              <MapComponent \n                singleMarker={{\n                  id: work.id || 0,\n                  latitude: work.latitude,\n                  longitude: work.longitude,\n                  name: work.name,\n                  location: work.location\n                }}\n                center={[work.latitude, work.longitude]}\n                zoom={15}\n              />\n            </Box>\n          </Box>\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ArchitectureSinglePage; ","/**\n * Architect database service\n * Client-side implementation using SQL.js and sql.js-httpvfs\n */\n\nimport { getResultsArray, getSingleResult } from './ClientDatabaseService';\nimport type { Architect, ArchitectsResponse, Tag } from '../../types/architect';\n\n/**\n * IDによる建築家の取得\n * @param id 建築家ID\n * @returns 建築家情報\n */\nexport const getArchitectById = async (id: number): Promise<Architect | undefined> => {\n  return getSingleResult<Architect>(\n    `SELECT * FROM ZCDARCHITECT WHERE ZAR_ID = ?`,\n    [id]\n  );\n};\n\n/**\n * 建築家一覧の取得（ページング付き）\n * @param page ページ番号（1から開始）\n * @param limit 1ページあたりの件数\n * @param searchTerm 検索キーワード（オプション）\n * @param tags タグフィルター（オプション）\n * @param sortBy ソート項目（オプション）\n * @param sortOrder ソート順（オプション）\n * @param options その他のフィルターオプション\n * @returns 建築家一覧と総件数\n */\nexport const getAllArchitects = async (\n  page: number = 1,\n  limit: number = 12,\n  searchTerm: string = '',\n  tags: string[] = [],\n  sortBy: string = 'ZAR_NAME',\n  sortOrder: string = 'asc',\n  options: {\n    nationality?: string;\n    category?: string;\n    school?: string;\n    birthYearFrom?: number;\n    birthYearTo?: number;\n    deathYear?: number;\n  } = {}\n): Promise<ArchitectsResponse> => {\n  const offset = (page - 1) * limit;\n  \n  // 検索条件の構築\n  let whereClause = '1=1';\n  const params: any[] = [];\n  \n  // キーワード検索\n  if (searchTerm) {\n    whereClause += ' AND (ZAR_NAME LIKE ? OR ZAR_KANA LIKE ? OR ZAR_NAMEENG LIKE ?)';\n    params.push(`%${searchTerm}%`, `%${searchTerm}%`, `%${searchTerm}%`);\n  }\n  \n  // その他のフィルター条件\n  if (options.nationality) {\n    whereClause += ' AND ZAR_NATIONALITY = ?';\n    params.push(options.nationality);\n  }\n  \n  if (options.category) {\n    whereClause += ' AND ZAR_CATEGORY = ?';\n    params.push(options.category);\n  }\n  \n  if (options.school) {\n    whereClause += ' AND ZAR_SCHOOL = ?';\n    params.push(options.school);\n  }\n  \n  if (options.birthYearFrom) {\n    whereClause += ' AND ZAR_BIRTHYEAR >= ?';\n    params.push(options.birthYearFrom);\n  }\n  \n  if (options.birthYearTo) {\n    whereClause += ' AND ZAR_BIRTHYEAR <= ?';\n    params.push(options.birthYearTo);\n  }\n  \n  if (options.deathYear) {\n    whereClause += ' AND ZAR_DEATHYEAR = ?';\n    params.push(options.deathYear);\n  }\n  \n  // タグによるフィルタリング（INNER JOIN使用）\n  let joinClause = '';\n  if (tags && tags.length > 0) {\n    joinClause = `\n      INNER JOIN ZCDARCHITECT_TAG ON ZCDARCHITECT.ZAR_ID = ZCDARCHITECT_TAG.ARCHITECT_ID\n      INNER JOIN ZCDTAG ON ZCDARCHITECT_TAG.TAG_ID = ZCDTAG.TAG_ID\n    `;\n    whereClause += ' AND ZCDTAG.TAG_NAME IN (';\n    whereClause += tags.map(() => '?').join(',');\n    whereClause += ')';\n    params.push(...tags);\n  }\n  \n  // 総件数のクエリ\n  const countQuery = `\n    SELECT COUNT(DISTINCT ZCDARCHITECT.ZAR_ID) as total\n    FROM ZCDARCHITECT\n    ${joinClause}\n    WHERE ${whereClause}\n  `;\n  \n  // データ取得クエリ\n  const dataQuery = `\n    SELECT DISTINCT ZCDARCHITECT.*\n    FROM ZCDARCHITECT\n    ${joinClause}\n    WHERE ${whereClause}\n    ORDER BY ${sortBy} ${sortOrder === 'desc' ? 'DESC' : 'ASC'}\n    LIMIT ? OFFSET ?\n  `;\n  \n  // パラメータにLIMITとOFFSETを追加\n  const dataParams = [...params, limit, offset];\n  \n  try {\n    // 総件数取得\n    const countResult = await getSingleResult<{ total: number }>(countQuery, params);\n    const total = countResult?.total || 0;\n    \n    // データ取得\n    const architects = await getResultsArray<Architect>(dataQuery, dataParams);\n    \n    return {\n      results: architects,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit)\n    };\n  } catch (error) {\n    console.error('建築家データ取得エラー:', error);\n    throw error;\n  }\n};\n\n/**\n * 建築家タグの取得\n * @returns タグ一覧\n */\nexport const getArchitectTags = async (): Promise<Tag[]> => {\n  return getResultsArray<Tag>(`\n    SELECT TAG_ID, TAG_NAME, COUNT(ARCHITECT_ID) as TAG_COUNT\n    FROM ZCDTAG\n    LEFT JOIN ZCDARCHITECT_TAG ON ZCDTAG.TAG_ID = ZCDARCHITECT_TAG.TAG_ID\n    GROUP BY ZCDTAG.TAG_ID, ZCDTAG.TAG_NAME\n    ORDER BY TAG_COUNT DESC, TAG_NAME\n  `);\n};","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { \n  Container, \n  Typography, \n  Box, \n  Grid, \n  Card, \n  CardContent, \n  CardActionArea,\n  TextField,\n  InputAdornment,\n  Chip,\n  Button,\n  CircularProgress,\n  Pagination,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Paper,\n  Autocomplete,\n  Popover,\n  Alert\n} from '@mui/material';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SortIcon from '@mui/icons-material/Sort';\nimport PublicIcon from '@mui/icons-material/Public';\nimport CakeIcon from '@mui/icons-material/Cake';\nimport PersonIcon from '@mui/icons-material/Person';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport SchoolIcon from '@mui/icons-material/School';\nimport SortByAlphaIcon from '@mui/icons-material/SortByAlpha';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport { ArchitectService, initDatabase, getResultsArray } from '../services/db';\nimport { Architect, ArchitectsResponse, TagCategory } from '../types/architect';\n\n// 並び替えオプションのインターフェース\ninterface SortOption {\n  value: string;\n  label: string;\n  icon: React.ReactNode;\n}\n\nconst ArchitectsPage: React.FC = () => {\n  console.log(\"ArchitectsPage コンポーネントがレンダリングされました\");\n  \n  // 状態変数\n  const [architects, setArchitects] = useState<Architect[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [totalPages, setTotalPages] = useState<number>(0);\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  const [selectedTagsWithYears, setSelectedTagsWithYears] = useState<string[]>([]);\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n  const [sortBy, setSortBy] = useState<string>('name');\n  const [sortOrder, setSortOrder] = useState<string>('asc');\n  \n  // タグ選択用の状態\n  const [yearAnchorEl, setYearAnchorEl] = useState<HTMLElement | null>(null);\n  const [currentTagForYear, setCurrentTagForYear] = useState<string>('');\n  const [tagsYears, setTagsYears] = useState<Record<string, string[]>>({});\n  \n  // 新しいフィルターパラメータ\n  const [nationality, setNationality] = useState<string>('');\n  const [category, setCategory] = useState<string>('');\n  const [school, setSchool] = useState<string>('');\n  const [birthYearFrom, setBirthYearFrom] = useState<string>('');\n  const [birthYearTo, setBirthYearTo] = useState<string>('');\n  const [deathYear, setDeathYear] = useState<string>('');\n  \n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  \n  // デバッグ: タグメニュー状態の監視\n  useEffect(() => {\n    console.log(\"tagMenuAnchorEl 状態変更:\", Boolean(yearAnchorEl));\n  }, [yearAnchorEl]);\n  \n  // 並び替えオプション\n  const sortOptions: SortOption[] = [\n    { value: 'name', label: '名前順', icon: <SortByAlphaIcon /> },\n    { value: 'birthYear', label: '生年順', icon: <CalendarMonthIcon /> },\n    { value: 'nationality', label: '国籍順', icon: <PublicIcon /> }\n  ];\n\n  // タグの読み込み\n  useEffect(() => {\n    console.log(\"タグ読み込みのuseEffectが実行されました\");\n    const loadTags = async () => {\n      try {\n        console.log(\"建築家タグ取得開始\");\n        const tags = await ArchitectService.getArchitectTags();\n        console.log(\"取得した建築家タグ:\", tags);\n        \n        // タグを日本語のベースタグに変換\n        const baseTags = ['国籍', 'カテゴリー', '学校', '生年', '没年'];\n        setAvailableTags(baseTags);\n      } catch (error) {\n        console.error('タグ取得エラー:', error);\n      }\n    };\n    \n    loadTags();\n  }, []);\n\n  // 建築家データ読み込み\n  useEffect(() => {\n    console.log(\"建築家データ読み込みのuseEffectが実行されました\", location.search);\n    const loadArchitects = async () => {\n      setLoading(true);\n      try {\n        // クエリパラメータの取得\n        const page = parseInt(queryParams.get('page') || '1');\n        const search = queryParams.get('search') || '';\n        const tags = queryParams.get('tags') ? queryParams.get('tags').split(',') : [];\n        const sort = queryParams.get('sortBy') || 'name';\n        const order = queryParams.get('sortOrder') || 'asc';\n        \n        // 新しいフィルターの取得\n        const nat = queryParams.get('nationality') || '';\n        const cat = queryParams.get('category') || '';\n        const sch = queryParams.get('school') || '';\n        const birthFrom = queryParams.get('birthYearFrom') || '';\n        const birthTo = queryParams.get('birthYearTo') || '';\n        const death = queryParams.get('deathYear') || '';\n        \n        console.log(\"URLから読み取ったパラメータ:\", { page, search, tags, sort, order, nat, cat, sch, birthFrom, birthTo, death });\n        \n        // 状態を更新\n        setCurrentPage(page);\n        setSearchTerm(search);\n        setSelectedTags(tags);\n        setSortBy(sort);\n        setSortOrder(order);\n        setNationality(nat);\n        setCategory(cat);\n        setSchool(sch);\n        setBirthYearFrom(birthFrom);\n        setBirthYearTo(birthTo);\n        setDeathYear(death);\n        \n        // 建築家データを取得\n        console.log(\"建築家データ取得開始:\", { page, search, tags, sort, order, nat, cat, sch, birthFrom, birthTo, death });\n        const result = await ArchitectService.getAllArchitects(\n          page,\n          10, // itemsPerPage\n          search,\n          tags,\n          sort,\n          order,\n          nat,\n          cat,\n          sch,\n          birthFrom ? parseInt(birthFrom) : 0,\n          birthTo ? parseInt(birthTo) : 0,\n          death ? parseInt(death) : 0\n        );\n        \n        console.log(\"取得した建築家データ:\", result);\n        setArchitects(result.items);\n        setTotalPages(result.totalPages);\n        setTotalItems(result.total);\n      } catch (error) {\n        console.error('建築家データ取得エラー:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadArchitects();\n  }, [location.search]);\n\n  // タグの年度取得関数\n  const getYearsForArchitectTag = async (tag: string) => {\n    console.log(`${tag}の年度取得開始`);\n    let query = '';\n    if (tag === '国籍') {\n      query = `SELECT DISTINCT ZAT_NATIONALITY as value FROM ZCDARCHITECT WHERE ZAT_NATIONALITY != '' ORDER BY ZAT_NATIONALITY`;\n    } else if (tag === 'カテゴリー') {\n      query = `SELECT DISTINCT ZAT_CATEGORY as value FROM ZCDARCHITECT WHERE ZAT_CATEGORY != '' ORDER BY ZAT_CATEGORY`;\n    } else if (tag === '学校') {\n      query = `SELECT DISTINCT ZAT_SCHOOL as value FROM ZCDARCHITECT WHERE ZAT_SCHOOL != '' ORDER BY ZAT_SCHOOL`;\n    } else if (tag === '生年') {\n      query = `SELECT DISTINCT ZAT_BIRTHYEAR as value FROM ZCDARCHITECT WHERE ZAT_BIRTHYEAR > 0 ORDER BY ZAT_BIRTHYEAR DESC`;\n    } else if (tag === '没年') {\n      query = `SELECT DISTINCT ZAT_DEATHYEAR as value FROM ZCDARCHITECT WHERE ZAT_DEATHYEAR > 0 ORDER BY ZAT_DEATHYEAR DESC`;\n    }\n    \n    if (!query) return [];\n    \n    try {\n      // getResultsArrayを使用してクエリを実行\n      const results = await getResultsArray<{ value: string | number }>(query);\n      \n      // 結果を文字列配列に変換\n      return results.map(item => String(item.value)).filter(Boolean);\n    } catch (error) {\n      console.error(`${tag}の値取得エラー:`, error);\n      return [];\n    }\n  };\n\n  // 年度メニューを開く\n  const handleYearMenuOpen = async (event: React.MouseEvent<HTMLElement>, tag: string) => {\n    console.log(`${tag}の年度メニューを開く`, event.currentTarget);\n    setYearAnchorEl(event.currentTarget);\n    setCurrentTagForYear(tag);\n    \n    // 年度情報を取得（既に取得済みでない場合）\n    if (!tagsYears[tag]) {\n      try {\n        const years = await getYearsForArchitectTag(tag);\n        console.log(`取得した${tag}の年度:`, years);\n        setTagsYears(prev => ({\n          ...prev,\n          [tag]: years\n        }));\n      } catch (error) {\n        console.error(`${tag}の年度取得エラー:`, error);\n      }\n    }\n  };\n\n  // 年度メニューを閉じる\n  const handleYearMenuClose = () => {\n    console.log(\"年度メニューを閉じる\");\n    setYearAnchorEl(null);\n    setCurrentTagForYear('');\n  };\n\n  // 年度を選択\n  const handleYearSelect = (year: string) => {\n    console.log(`年度選択: ${year} (タグ: ${currentTagForYear})`);\n    \n    if (currentTagForYear === '国籍') {\n      setNationality(year);\n    } else if (currentTagForYear === 'カテゴリー') {\n      setCategory(year);\n    } else if (currentTagForYear === '学校') {\n      setSchool(year);\n    } else if (currentTagForYear === '生年') {\n      setBirthYearFrom(year);\n    } else if (currentTagForYear === '没年') {\n      setDeathYear(year);\n    }\n    \n    handleYearMenuClose();\n    updateUrlAndSearch();\n  };\n\n  // タグ選択時の処理\n  const handleTagSelect = (event: React.SyntheticEvent, newTags: string[]) => {\n    console.log(`タグ選択変更:`, newTags);\n    setSelectedTags(newTags);\n    \n    // 選択解除されたタグに関連するフィルターをリセット\n    const removedTags = selectedTags.filter(tag => !newTags.includes(tag));\n    \n    for (const tag of removedTags) {\n      if (tag === '国籍') {\n        setNationality('');\n      } else if (tag === 'カテゴリー') {\n        setCategory('');\n      } else if (tag === '学校') {\n        setSchool('');\n      } else if (tag === '生年') {\n        setBirthYearFrom('');\n        setBirthYearTo('');\n      } else if (tag === '没年') {\n        setDeathYear('');\n      }\n    }\n    \n    // 新しく選択されたタグについて、年度情報を取得\n    const addedTags = newTags.filter(tag => !selectedTags.includes(tag));\n    \n    if (addedTags.length > 0) {\n      addedTags.forEach(async (tag) => {\n        if (!tagsYears[tag]) {\n          try {\n            const years = await getYearsForArchitectTag(tag);\n            setTagsYears(prev => ({\n              ...prev,\n              [tag]: years\n            }));\n          } catch (error) {\n            console.error(`${tag}の年度取得エラー:`, error);\n          }\n        }\n      });\n    }\n    \n    updateUrlAndSearch();\n  };\n\n  // 並び替え変更\n  const handleSortChange = (sortValue: string) => {\n    console.log(`並び替え変更: ${sortValue}`);\n    \n    // 同じ並び替え方法をクリックした場合は昇順/降順を切り替え\n    if (sortBy === sortValue) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(sortValue);\n      setSortOrder('asc');\n    }\n    \n    updateUrlAndSearch();\n  };\n\n  // ページ変更\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    console.log(`ページ変更: ${value}`);\n    setCurrentPage(value);\n    \n    const newParams = new URLSearchParams(location.search);\n    newParams.set('page', value.toString());\n    navigate({ search: newParams.toString() });\n  };\n\n  // 検索実行\n  const handleSearch = () => {\n    console.log(`検索実行: ${searchTerm}`);\n    updateUrlAndSearch();\n  };\n\n  // 検索クリア\n  const handleClearSearch = () => {\n    console.log(\"検索条件をクリア\");\n    setSearchTerm('');\n    setSelectedTags([]);\n    setSelectedTagsWithYears([]);\n    setNationality('');\n    setCategory('');\n    setSchool('');\n    setBirthYearFrom('');\n    setBirthYearTo('');\n    setDeathYear('');\n    setCurrentPage(1);\n    \n    // URLから検索パラメータを削除（並び替えは保持）\n    const queryParams = new URLSearchParams();\n    if (sortBy !== 'name') {\n      queryParams.set('sortBy', sortBy);\n    }\n    if (sortOrder !== 'asc') {\n      queryParams.set('sortOrder', sortOrder);\n    }\n    navigate({ search: queryParams.toString() });\n  };\n\n  // URLを更新して検索を実行する\n  const updateUrlAndSearch = () => {\n    console.log(\"URLと検索を更新\");\n    const newQueryParams = new URLSearchParams();\n    \n    if (currentPage > 1) newQueryParams.set('page', currentPage.toString());\n    if (searchTerm) newQueryParams.set('search', searchTerm);\n    if (selectedTags.length > 0) newQueryParams.set('tags', selectedTags.join(','));\n    if (sortBy !== 'name') newQueryParams.set('sortBy', sortBy);\n    if (sortOrder !== 'asc') newQueryParams.set('sortOrder', sortOrder);\n    if (nationality) newQueryParams.set('nationality', nationality);\n    if (category) newQueryParams.set('category', category);\n    if (school) newQueryParams.set('school', school);\n    if (birthYearFrom) newQueryParams.set('birthYearFrom', birthYearFrom);\n    if (birthYearTo) newQueryParams.set('birthYearTo', birthYearTo);\n    if (deathYear) newQueryParams.set('deathYear', deathYear);\n    \n    console.log(\"新しいURLパラメータ:\", newQueryParams.toString());\n    navigate({ search: newQueryParams.toString() });\n  };\n\n  // 現在のフィルター情報を表示\n  const CurrentFilters = () => {\n    const activeFilters = [];\n    \n    if (nationality) activeFilters.push({ label: `国籍: ${nationality}`, onDelete: () => { setNationality(''); updateUrlAndSearch(); } });\n    if (birthYearFrom) activeFilters.push({ label: `生年: ${birthYearFrom}`, onDelete: () => { setBirthYearFrom(''); updateUrlAndSearch(); } });\n    if (deathYear) activeFilters.push({ label: `没年: ${deathYear}`, onDelete: () => { setDeathYear(''); updateUrlAndSearch(); } });\n    if (category) activeFilters.push({ label: `カテゴリー: ${category}`, onDelete: () => { setCategory(''); updateUrlAndSearch(); } });\n    if (school) activeFilters.push({ label: `学校: ${school}`, onDelete: () => { setSchool(''); updateUrlAndSearch(); } });\n    \n    if (activeFilters.length === 0 && !searchTerm && selectedTags.length === 0) return null;\n    \n    return (\n      <Box sx={{ mb: 3 }}>\n        <Alert \n          severity=\"info\" \n          action={\n            <Button color=\"inherit\" size=\"small\" onClick={handleClearSearch}>\n              クリア\n            </Button>\n          }\n        >\n          {activeFilters.length > 0 \n            ? `フィルター: ${activeFilters.map(f => f.label).join(', ')}` \n            : searchTerm \n              ? `「${searchTerm}」で検索中` \n              : selectedTags.length > 0 \n                ? `タグ「${selectedTags.join(', ')}」で絞り込み中`\n                : ''}\n        </Alert>\n      </Box>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        建築家一覧\n      </Typography>\n\n      <Paper sx={{ p: 3, mb: 4 }}>\n        {/* 検索バーとボタン */}\n        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' }, gap: 2, mb: 3 }}>\n          <TextField\n            fullWidth\n            label=\"建築家名、国籍、カテゴリーで検索\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button \n            variant=\"contained\" \n            onClick={handleSearch}\n            sx={{ minWidth: '120px' }}\n          >\n            検索\n          </Button>\n        </Box>\n        \n        {/* タグ選択と並び替え */}\n        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 2, mb: 3, alignItems: 'flex-start' }}>\n          {/* タグ選択 */}\n          <Autocomplete\n            multiple\n            id=\"tags-selector\"\n            options={availableTags}\n            value={selectedTags}\n            onChange={handleTagSelect}\n            fullWidth\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"タグで絞り込み\"\n                placeholder=\"タグを選択\"\n              />\n            )}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => {\n                // このタグに利用可能な年度情報があるか確認\n                const isExpandable = Boolean(tagsYears[option] && tagsYears[option].length > 0);\n                \n                // このタグに対して選択されている値\n                let selectedValue = '';\n                if (option === '国籍') selectedValue = nationality;\n                else if (option === 'カテゴリー') selectedValue = category;\n                else if (option === '学校') selectedValue = school;\n                else if (option === '生年') selectedValue = birthYearFrom;\n                else if (option === '没年') selectedValue = deathYear;\n                \n                return (\n                  <Chip\n                    key={option}\n                    label={\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        {option}\n                        {selectedValue && (\n                          <Typography \n                            variant=\"caption\" \n                            sx={{ \n                              ml: 0.5, \n                              fontWeight: 'bold',\n                              backgroundColor: 'rgba(0, 0, 0, 0.08)',\n                              borderRadius: '4px',\n                              px: 0.5,\n                              py: 0.2\n                            }}\n                          >\n                            {selectedValue}\n                          </Typography>\n                        )}\n                        {isExpandable && (\n                          <ArrowDropDownIcon fontSize=\"small\" />\n                        )}\n                      </Box>\n                    }\n                    {...getTagProps({ index })}\n                    color={selectedValue ? \"primary\" : \"default\"}\n                    variant=\"outlined\"\n                    onClick={(event) => {\n                      // クリックイベントが伝播してタグが削除されるのを防止\n                      event.stopPropagation();\n                      handleYearMenuOpen(event, option);\n                    }}\n                    onDelete={(event) => {\n                      // 削除イベントはそのまま通過させる\n                      getTagProps({ index }).onDelete(event);\n                    }}\n                    sx={{\n                      maxWidth: '100%',\n                      '& .MuiChip-label': {\n                        overflow: 'hidden',\n                        whiteSpace: 'nowrap',\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          />\n          \n          {/* 並び替え */}\n          <FormControl sx={{ minWidth: 200 }}>\n            <InputLabel id=\"sort-select-label\">並び替え</InputLabel>\n            <Select\n              labelId=\"sort-select-label\"\n              value={`${sortBy}_${sortOrder}`}\n              label=\"並び替え\"\n              onChange={(e) => {\n                const [newSortBy, newSortOrder] = e.target.value.split('_');\n                setSortBy(newSortBy);\n                setSortOrder(newSortOrder);\n                updateUrlAndSearch();\n              }}\n            >\n              <MenuItem value=\"name_asc\">名前 (昇順)</MenuItem>\n              <MenuItem value=\"name_desc\">名前 (降順)</MenuItem>\n              <MenuItem value=\"birthYear_asc\">生年 (昇順)</MenuItem>\n              <MenuItem value=\"birthYear_desc\">生年 (降順)</MenuItem>\n              <MenuItem value=\"nationality_asc\">国籍 (昇順)</MenuItem>\n              <MenuItem value=\"nationality_desc\">国籍 (降順)</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n        \n        {/* 年度選択ポップオーバー */}\n        <Popover\n          open={Boolean(yearAnchorEl)}\n          anchorEl={yearAnchorEl}\n          onClose={handleYearMenuClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n        >\n          <Box sx={{ p: 2, width: 300, maxHeight: 400, overflow: 'auto' }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {currentTagForYear === '国籍' ? '国籍を選択' :\n               currentTagForYear === 'カテゴリー' ? 'カテゴリーを選択' :\n               currentTagForYear === '学校' ? '学校を選択' :\n               currentTagForYear === '生年' ? '生年を選択' :\n               currentTagForYear === '没年' ? '没年を選択' : 'タグ値を選択'}\n            </Typography>\n            \n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n              <Chip\n                label=\"指定なし\"\n                onClick={() => handleYearSelect('')}\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{ mb: 1 }}\n              />\n              \n              {tagsYears[currentTagForYear]?.map(year => (\n                <Chip\n                  key={year}\n                  label={year}\n                  onClick={() => handleYearSelect(year)}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  color={\n                    (currentTagForYear === '国籍' && year === nationality) ||\n                    (currentTagForYear === 'カテゴリー' && year === category) ||\n                    (currentTagForYear === '学校' && year === school) ||\n                    (currentTagForYear === '生年' && year === birthYearFrom) ||\n                    (currentTagForYear === '没年' && year === deathYear)\n                      ? \"primary\"\n                      : \"default\"\n                  }\n                  sx={{ \n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    maxWidth: '100%'\n                  }}\n                />\n              ))}\n            </Box>\n          </Box>\n        </Popover>\n        \n        {/* 選択中のフィルター表示 */}\n        <CurrentFilters />\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {totalItems}人の建築家\n          </Typography>\n          {totalPages > 1 && (\n            <Pagination \n              count={totalPages} \n              page={currentPage} \n              onChange={handlePageChange} \n              color=\"primary\"\n              size=\"small\"\n            />\n          )}\n        </Box>\n      </Paper>\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <>\n          {architects.length === 0 ? (\n            <Box sx={{ textAlign: 'center', py: 4 }}>\n              <Typography variant=\"h6\">\n                建築家が見つかりませんでした\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                検索条件を変更してお試しください\n              </Typography>\n            </Box>\n          ) : (\n            <Grid container spacing={3}>\n              {architects.map((architect) => (\n                <Grid item xs={12} sm={6} md={4} key={architect.id}>\n                  <Card \n                    sx={{ \n                      height: '100%', \n                      display: 'flex', \n                      flexDirection: 'column',\n                      transition: 'transform 0.2s',\n                      '&:hover': {\n                        transform: 'scale(1.02)',\n                      },\n                    }}\n                  >\n                    <CardActionArea component={RouterLink} to={`/architects/${architect.id}`}>\n                      <CardContent>\n                        <Typography variant=\"h6\" component=\"div\" gutterBottom>\n                          {architect.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                          {architect.nationality} • {architect.birthYear || '?'}-{architect.deathYear || '現在'}\n                        </Typography>\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 1 }}>\n                          {architect.tags && architect.tags.map((tag) => (\n                            <Chip\n                              key={tag}\n                              label={tag}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{ pointerEvents: 'none' }}\n                            />\n                          ))}\n                        </Box>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n          \n          {/* ページネーション */}\n          {totalPages > 1 && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n              <Pagination \n                count={totalPages} \n                page={currentPage} \n                onChange={handlePageChange} \n                color=\"primary\"\n              />\n            </Box>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default ArchitectsPage; ","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  CardActionArea,\n  Typography,\n  Box,\n  Chip\n} from '@mui/material';\nimport EventIcon from '@mui/icons-material/Event';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\n\ninterface Architecture {\n  id: number;\n  name: string;\n  completedYear: number;\n  city?: string;\n  location?: string;\n  tag?: string;\n}\n\ninterface ArchitectureListProps {\n  architectures: Architecture[];\n  compact?: boolean;\n}\n\n/**\n * 建築作品のリストを表示するコンポーネント\n */\nconst ArchitectureList: React.FC<ArchitectureListProps> = ({ architectures, compact = false }) => {\n  if (!architectures || architectures.length === 0) {\n    return (\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        登録されている作品はありません。\n      </Typography>\n    );\n  }\n\n  return (\n    <Grid container spacing={compact ? 2 : 3}>\n      {architectures.map((architecture) => (\n        <Grid item key={architecture.id} xs={12} sm={6} md={compact ? 6 : 4}>\n          <Card \n            sx={{ \n              height: '100%', \n              display: 'flex', \n              flexDirection: 'column',\n              transition: 'transform 0.2s',\n              '&:hover': {\n                transform: 'scale(1.02)',\n              },\n            }}\n          >\n            <CardActionArea \n              component={RouterLink} \n              to={`/architecture/${architecture.id}`}\n              sx={{ flexGrow: 1 }}\n            >\n              <CardContent>\n                <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                  {architecture.name}\n                </Typography>\n                \n                {architecture.completedYear > 0 && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                    <EventIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {architecture.completedYear}年\n                    </Typography>\n                  </Box>\n                )}\n                \n                {(architecture.city || architecture.location) && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                    <LocationOnIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {architecture.city ? architecture.city : ''}\n                      {architecture.city && architecture.location ? ' / ' : ''}\n                      {architecture.location ? architecture.location : ''}\n                    </Typography>\n                  </Box>\n                )}\n                \n                {/* 作品のタグを表示 */}\n                {architecture.tag && (\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 1 }}>\n                    {architecture.tag.split(',')\n                      .filter(tag => tag.trim() !== '' && !tag.includes('の追加建築'))\n                      .map((tag, idx) => (\n                        <Chip \n                          key={idx}\n                          label={tag.trim()}\n                          size=\"small\"\n                          color=\"secondary\"\n                          variant=\"outlined\"\n                          sx={{ height: '20px', fontSize: '0.65rem' }}\n                        />\n                      ))\n                    }\n                  </Box>\n                )}\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ArchitectureList; ","import React, { useState, useEffect } from 'react';\nimport { useParams, Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { \n  Container, \n  Typography, \n  Box, \n  Grid, \n  Paper, \n  Chip,\n  Divider,\n  Button,\n  ButtonGroup,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Card,\n  CardContent,\n  CardActionArea,\n  Tooltip,\n  Link\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport SchoolIcon from '@mui/icons-material/School';\nimport PersonIcon from '@mui/icons-material/Person';\nimport WorkIcon from '@mui/icons-material/Work';\nimport PublicIcon from '@mui/icons-material/Public';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport SearchIcon from '@mui/icons-material/Search';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport LinkIcon from '@mui/icons-material/Link';\nimport CakeIcon from '@mui/icons-material/Cake';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\nimport { ArchitectService } from '../services/db';\nimport MapComponent from '../components/Map';\nimport ArchitectureList from '../components/ArchitectureList';\n\n// Wikipediaアイコンコンポーネント\nconst WikipediaIcon = () => (\n  <Box\n    component=\"span\"\n    sx={{\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 24,\n      height: 24,\n    }}\n  >\n    <Typography\n      variant=\"caption\"\n      component=\"span\"\n      sx={{\n        fontFamily: 'serif',\n        fontWeight: 'bold',\n        fontSize: '16px',\n      }}\n    >\n      W\n    </Typography>\n  </Box>\n);\n\nconst ArchitectSinglePage = () => {\n  const { id } = useParams();\n  const [architect, setArchitect] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [teacherInfo, setTeacherInfo] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchArchitect = async () => {\n      setLoading(true);\n      try {\n        const data = await ArchitectService.getArchitectById(parseInt(id));\n        if (!data) {\n          setError('建築家情報が見つかりませんでした。');\n          setLoading(false);\n          return;\n        }\n        setArchitect(data);\n        \n        // 教師情報を取得\n        const teachers = [];\n        if (data.teacher1) {\n          const teacherInfo = { name: data.teacher1, id: null };\n          try {\n            // 教師の名前からIDを検索する処理（実装は省略）\n            // 実際のデータベースクエリに置き換える必要があります\n            teacherInfo.id = await findArchitectIdByName(data.teacher1);\n          } catch (err) {\n            console.error('教師情報の取得に失敗:', err);\n          }\n          teachers.push(teacherInfo);\n        }\n        \n        if (data.teacher2) {\n          const teacherInfo = { name: data.teacher2, id: null };\n          try {\n            teacherInfo.id = await findArchitectIdByName(data.teacher2);\n          } catch (err) {\n            console.error('教師情報の取得に失敗:', err);\n          }\n          teachers.push(teacherInfo);\n        }\n        \n        if (data.teacher3) {\n          const teacherInfo = { name: data.teacher3, id: null };\n          try {\n            teacherInfo.id = await findArchitectIdByName(data.teacher3);\n          } catch (err) {\n            console.error('教師情報の取得に失敗:', err);\n          }\n          teachers.push(teacherInfo);\n        }\n        \n        setTeacherInfo(teachers);\n      } catch (err) {\n        console.error('建築家データ取得エラー:', err);\n        setError('建築家情報の読み込み中にエラーが発生しました。');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (id) {\n      fetchArchitect();\n    }\n  }, [id]);\n\n  // 建築家名からIDを検索する関数（実際のアプリでは適切に実装する必要があります）\n  const findArchitectIdByName = async (name) => {\n    // この関数は、既存の建築家データベースから名前でIDを検索する処理を実装します\n    // 例: SELECT id FROM architects WHERE name = ?\n    // サンプルとしてnullを返しています\n    return null;\n  };\n\n  // 学校・学部情報をフォーマットする関数\n  const formatEducation = () => {\n    if (!architect) return null;\n    \n    const education = [];\n    \n    if (architect.school) {\n      let eduStr = architect.school;\n      if (architect.faculty) {\n        eduStr += ` ${architect.faculty}`;\n      }\n      education.push(eduStr);\n    }\n    \n    if (architect.schoolAbroad) {\n      education.push(architect.schoolAbroad);\n    }\n    \n    return education.length > 0 ? education.join('、') : null;\n  };\n\n  // 教師情報をフォーマットする関数\n  const formatTeachers = () => {\n    if (!teacherInfo || teacherInfo.length === 0) return null;\n    \n    return teacherInfo.map((teacher, index) => (\n      <span key={index}>\n        {index > 0 && '、'}\n        {teacher.id ? (\n          <Link component={RouterLink} to={`/architects/${teacher.id}`} color=\"inherit\" underline=\"hover\">\n            {teacher.name}\n          </Link>\n        ) : (\n          teacher.name\n        )}\n      </span>\n    ));\n  };\n\n  // タグをクリックしたときの処理\n  const handleTagClick = (tagType, value) => {\n    if (!value) return;\n    \n    let searchParam = '';\n    \n    switch (tagType) {\n      case 'nationality':\n        searchParam = `nationality=${encodeURIComponent(value)}`;\n        break;\n      case 'born':\n        searchParam = `birthyear_from=${encodeURIComponent(value)}&birthyear_to=${encodeURIComponent(value)}`;\n        break;\n      case 'died':\n        searchParam = `deathyear=${encodeURIComponent(value)}`;\n        break;\n      case 'category':\n        searchParam = `category=${encodeURIComponent(value)}`;\n        break;\n      default:\n        return;\n    }\n    \n    navigate(`/architects?${searchParam}`);\n  };\n\n  // Google検索とWikipediaのURL生成\n  const getGoogleSearchUrl = (architectName, nationality) => {\n    const searchQuery = `${architectName} ${nationality || ''} 建築家`;\n    return `https://www.google.com/search?q=${encodeURIComponent(searchQuery)}`;\n  };\n\n  const getWikipediaSearchUrl = (architectName) => {\n    return `https://ja.wikipedia.org/wiki/Special:Search?search=${encodeURIComponent(architectName)}`;\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 8 }}>\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  if (error || !architect) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Paper sx={{ p: 3 }}>\n          <Typography variant=\"h5\" color=\"error\" gutterBottom>\n            エラー\n          </Typography>\n          <Typography paragraph>\n            {error || '建築家情報が見つかりませんでした。'}\n          </Typography>\n          <Button \n            variant=\"outlined\" \n            startIcon={<ArrowBackIcon />} \n            onClick={() => navigate(-1)}\n          >\n            戻る\n          </Button>\n        </Paper>\n      </Container>\n    );\n  }\n\n  // 作品からタグを収集し、重複を除去\n  const allTags = new Set();\n  if (architect.works) {\n    architect.works.forEach(work => {\n      if (work.tag) {\n        const tags = work.tag.split(',');\n        tags.forEach(tag => {\n          const trimmedTag = tag.trim();\n          if (trimmedTag && !trimmedTag.includes('の追加建築')) {\n            allTags.add(trimmedTag);\n          }\n        });\n      }\n    });\n  }\n\n  // 建築家固有のタグを生成\n  const architectTags = [];\n  if (architect.nationality) {\n    architectTags.push(`nationality:${architect.nationality}`);\n  }\n  if (architect.birthYear > 0) {\n    // 10年単位の年代を計算\n    const decade = Math.floor(architect.birthYear / 10) * 10;\n    architectTags.push(`born:${decade}s`);\n  }\n  if (architect.deathYear > 0) {\n    architectTags.push(`died:${architect.deathYear}`);\n  }\n  if (architect.category) {\n    architectTags.push(`category:${architect.category}`);\n  }\n  if (architect.school) {\n    architectTags.push(`school:${architect.school}`);\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Button\n        variant=\"outlined\"\n        component={RouterLink}\n        to=\"/architects\"\n        startIcon={<ArrowBackIcon />}\n        sx={{ mb: 3 }}\n      >\n        建築家一覧に戻る\n      </Button>\n\n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          {architect.name || '不明'}\n        </Typography>\n\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, my: 3 }}>\n          {/* 建築家固有のタグを表示 */}\n          {architect.nationality && (\n            <Chip \n              icon={<PublicIcon />} \n              label={`nationality:${architect.nationality}`} \n              variant=\"outlined\" \n              onClick={() => handleTagClick('nationality', architect.nationality)}\n              clickable\n            />\n          )}\n          {architect.birthYear > 0 && (\n            <Chip \n              icon={<CakeIcon />} \n              label={`born:${Math.floor(architect.birthYear / 10) * 10}s`} \n              variant=\"outlined\" \n              onClick={() => handleTagClick('born', Math.floor(architect.birthYear / 10) * 10)}\n              clickable\n            />\n          )}\n          {architect.deathYear > 0 && (\n            <Chip \n              icon={<PersonOffIcon />} \n              label={`died:${architect.deathYear}`} \n              variant=\"outlined\" \n              onClick={() => handleTagClick('died', architect.deathYear)}\n              clickable\n            />\n          )}\n          {architect.category && (\n            <Chip \n              icon={<CategoryIcon />} \n              label={`category:${architect.category}`} \n              variant=\"outlined\" \n              onClick={() => handleTagClick('category', architect.category)}\n              clickable\n            />\n          )}\n          {architect.office && (\n            <Chip \n              icon={<BusinessIcon />} \n              label={architect.office} \n              variant=\"outlined\" \n            />\n          )}\n        </Box>\n\n        <Divider sx={{ my: 3 }} />\n\n        {/* リンクボタングループ - 区切り線の下に配置 */}\n        <Box sx={{ mb: 3, display: 'flex', flexDirection: 'row', gap: 1 }}>\n          {/* 事務所/建築家のホームページURLがある場合はボタンを表示 */}\n          {architect.website && (\n            <Tooltip title=\"公式ホームページ\">\n              <Button\n                href={architect.website.startsWith('http') ? architect.website : `http://${architect.website}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                startIcon={<LinkIcon />}\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ \n                  backgroundColor: '#4caf50', \n                  color: '#ffffff',\n                  '&:hover': { \n                    backgroundColor: '#388e3c',\n                  }\n                }}\n              >\n                ホームページ\n              </Button>\n            </Tooltip>\n          )}\n          \n          <Tooltip title=\"Google検索\">\n            <Button\n              href={getGoogleSearchUrl(architect.name, architect.nationality)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              startIcon={<SearchIcon />}\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ \n                backgroundColor: '#4285F4', \n                color: '#ffffff',\n                '&:hover': { \n                  backgroundColor: '#3367D6',\n                }\n              }}\n            >\n              検索\n            </Button>\n          </Tooltip>\n          \n          <Tooltip title=\"Wikipediaで検索\">\n            <Button\n              href={getWikipediaSearchUrl(architect.name)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              startIcon={<WikipediaIcon />}\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ \n                backgroundColor: '#333333', \n                color: '#ffffff',\n                '&:hover': { \n                  backgroundColor: '#222222',\n                }\n              }}\n            >\n              Wikipedia\n            </Button>\n          </Tooltip>\n        </Box>\n\n        <TableContainer component={Paper} variant=\"outlined\" sx={{ mb: 4 }}>\n          <Table>\n            <TableBody>\n              {architect.nationality && (\n                <TableRow>\n                  <TableCell component=\"th\" sx={{ width: '30%', bgcolor: 'rgba(0, 0, 0, 0.03)' }}>\n                    <Typography variant=\"subtitle2\">国籍</Typography>\n                  </TableCell>\n                  <TableCell>{architect.nationality}</TableCell>\n                </TableRow>\n              )}\n              \n              {(architect.birthYear > 0 || architect.deathYear > 0) && (\n                <TableRow>\n                  <TableCell component=\"th\" sx={{ width: '30%', bgcolor: 'rgba(0, 0, 0, 0.03)' }}>\n                    <Typography variant=\"subtitle2\">生年 - 没年</Typography>\n                  </TableCell>\n                  <TableCell>\n                    {architect.birthYear > 0 ? `${architect.birthYear}年` : '不明'} \n                    {architect.deathYear > 0 ? ` - ${architect.deathYear}年` : ''}\n                  </TableCell>\n                </TableRow>\n              )}\n\n              {architect.office && (\n                <TableRow>\n                  <TableCell component=\"th\" sx={{ width: '30%', bgcolor: 'rgba(0, 0, 0, 0.03)' }}>\n                    <Typography variant=\"subtitle2\">事務所</Typography>\n                  </TableCell>\n                  <TableCell>{architect.office}</TableCell>\n                </TableRow>\n              )}\n\n              {architect.prefecture && (\n                <TableRow>\n                  <TableCell component=\"th\" sx={{ width: '30%', bgcolor: 'rgba(0, 0, 0, 0.03)' }}>\n                    <Typography variant=\"subtitle2\">拠点</Typography>\n                  </TableCell>\n                  <TableCell>{architect.prefecture}</TableCell>\n                </TableRow>\n              )}\n              \n              {architect.nameEn && (\n                <TableRow>\n                  <TableCell component=\"th\" sx={{ width: '30%', bgcolor: 'rgba(0, 0, 0, 0.03)' }}>\n                    <Typography variant=\"subtitle2\">英語表記</Typography>\n                  </TableCell>\n                  <TableCell>{architect.nameEn}</TableCell>\n                </TableRow>\n              )}\n\n              {/* 教育背景 */}\n              {(architect.school || architect.faculty || architect.schoolAbroad) && (\n                <TableRow>\n                  <TableCell component=\"th\" sx={{ width: '30%', bgcolor: 'rgba(0, 0, 0, 0.03)' }}>\n                    <Typography variant=\"subtitle2\">教育背景</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <SchoolIcon sx={{ mr: 1, fontSize: '1rem', color: 'text.secondary' }} />\n                      <Typography variant=\"body2\">{formatEducation()}</Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              )}\n\n              {/* 師事した建築家 */}\n              {(architect.teacher1 || architect.teacher2 || architect.teacher3) && (\n                <TableRow>\n                  <TableCell component=\"th\" sx={{ width: '30%', bgcolor: 'rgba(0, 0, 0, 0.03)' }}>\n                    <Typography variant=\"subtitle2\">師事した建築家</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                      {formatTeachers()}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              )}\n\n              {/* カテゴリー */}\n              {architect.category && (\n                <TableRow>\n                  <TableCell component=\"th\" sx={{ width: '30%', bgcolor: 'rgba(0, 0, 0, 0.03)' }}>\n                    <Typography variant=\"subtitle2\">カテゴリー</Typography>\n                  </TableCell>\n                  <TableCell>{architect.category}</TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {/* 受賞歴・選定タグの表示 */}\n        {allTags.size > 0 && (\n          <Box sx={{ mb: 4 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              受賞歴・選定\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n              {Array.from(allTags).map((tag, index) => (\n                <Chip \n                  key={index}\n                  icon={<EmojiEventsIcon />}\n                  label={String(tag)}\n                  onClick={() => handleTagClick('category', tag)}\n                  clickable\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              ))}\n            </Box>\n          </Box>\n        )}\n\n        {architect.bio && (\n          <Box sx={{ mb: 4 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              経歴\n            </Typography>\n            <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line' }}>\n              {architect.bio}\n            </Typography>\n          </Box>\n        )}\n\n        {architect.works && architect.works.length > 0 && (\n          <>\n            <Box sx={{ mb: 4 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                作品マップ\n              </Typography>\n              {architect.works.some(work => work.latitude && work.longitude) ? (\n                <Box sx={{ height: '400px', width: '100%', mb: 3, border: '1px solid #eee', borderRadius: '4px', overflow: 'hidden' }}>\n                  <MapComponent \n                    markers={architect.works.filter(work => work.latitude && work.longitude)}\n                    zoom={5}\n                    center={[architect.works[0].latitude || 35.6762, architect.works[0].longitude || 139.6503]}\n                  />\n                </Box>\n              ) : (\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  位置情報が登録されている作品がありません。\n                </Typography>\n              )}\n            </Box>\n\n            <Box sx={{ mb: 4 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                代表作品\n              </Typography>\n              <ArchitectureList architectures={architect.works} />\n            </Box>\n          </>\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ArchitectSinglePage; ","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { \n  Container, \n  Typography, \n  Box, \n  Paper, \n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  CircularProgress,\n  Chip,\n  Card,\n  CardContent,\n  CardActionArea,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  Divider\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport MapIcon from '@mui/icons-material/Map';\nimport { ArchitectureService } from '../services/db';\nimport MapComponent from '../components/Map';\n\ninterface Work {\n  id: number;\n  name: string;\n  architectName?: string;\n  completedYear: number;\n  city?: string;\n  location: string;\n  latitude: number;\n  longitude: number;\n}\n\ninterface Filters {\n  yearFrom: string;\n  yearTo: string;\n}\n\ninterface TimeframeResult {\n  from: number;\n  to: number;\n}\n\nconst MapPage: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [works, setWorks] = useState<Work[]>([]);\n  const [allWorks, setAllWorks] = useState<Work[]>([]);\n  const [filters, setFilters] = useState<Filters>({\n    yearFrom: '',\n    yearTo: '',\n  });\n  const [showFilters, setShowFilters] = useState<boolean>(false);\n  const [selectedWork, setSelectedWork] = useState<Work | null>(null);\n  const [showWorkDetails, setShowWorkDetails] = useState<boolean>(false);\n\n  useEffect(() => {\n    fetchWorks();\n  }, []);\n\n  // ランダムな年代の範囲を生成する関数\n  const generateRandomTimeframe = (works: Work[]): TimeframeResult => {\n    if (!works || works.length === 0) return { from: 0, to: 0 };\n    \n    // 有効な年代の作品をフィルタリング\n    const validWorks = works.filter(work => work.completedYear > 0);\n    if (validWorks.length === 0) return { from: 0, to: 0 };\n    \n    // 全ての年代をソート\n    const years = validWorks.map(work => work.completedYear).sort((a, b) => a - b);\n    \n    // 最小年と最大年を取得\n    const minYear = years[0];\n    const maxYear = years[years.length - 1];\n    \n    // 100年程度の範囲をランダムに選択（または利用可能な範囲の半分程度）\n    const range = Math.min(100, Math.floor((maxYear - minYear) / 2));\n    \n    // 開始年をランダムに選択（全範囲の中で）\n    const startYearIndex = Math.floor(Math.random() * (years.length - Math.floor(years.length / 4)));\n    const startYear = years[startYearIndex];\n    \n    // 最大でも開始年+範囲、または最大年のいずれか小さい方を終了年とする\n    const endYear = Math.min(startYear + range, maxYear);\n    \n    return { from: startYear, to: endYear };\n  };\n\n  const fetchWorks = async (): Promise<void> => {\n    setLoading(true);\n    try {\n      // ブラウザ内SQLiteを使用してデータを取得\n      const data = await ArchitectureService.getArchitectureForMap();\n      setAllWorks(data);\n      \n      // 初回読み込み時はランダムな年代フィルターを適用\n      if (!filters.yearFrom && !filters.yearTo) {\n        const randomTimeframe = generateRandomTimeframe(data);\n        setFilters({\n          yearFrom: randomTimeframe.from.toString(),\n          yearTo: randomTimeframe.to.toString()\n        });\n        \n        // フィルター適用\n        const filteredData = data.filter(work => \n          work.completedYear >= randomTimeframe.from && \n          work.completedYear <= randomTimeframe.to\n        );\n        \n        setWorks(filteredData);\n      } else {\n        // フィルターによる絞り込み（クライアント側で実行）\n        let filteredWorks = data;\n        \n        if (filters.yearFrom) {\n          filteredWorks = filteredWorks.filter(work => work.completedYear >= parseInt(filters.yearFrom));\n        }\n        \n        if (filters.yearTo) {\n          filteredWorks = filteredWorks.filter(work => work.completedYear <= parseInt(filters.yearTo));\n        }\n        \n        setWorks(filteredWorks);\n      }\n    } catch (error) {\n      console.error('Error fetching works:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = event.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n\n  const applyFilters = (): void => {\n    setLoading(true);\n    \n    let filteredWorks = allWorks;\n    \n    if (filters.yearFrom) {\n      filteredWorks = filteredWorks.filter(work => work.completedYear >= parseInt(filters.yearFrom));\n    }\n    \n    if (filters.yearTo) {\n      filteredWorks = filteredWorks.filter(work => work.completedYear <= parseInt(filters.yearTo));\n    }\n    \n    setWorks(filteredWorks);\n    setLoading(false);\n  };\n\n  const clearFilters = (): void => {\n    setFilters({\n      yearFrom: '',\n      yearTo: '',\n    });\n    \n    // すべての作品を表示（制限をつけずに表示）\n    setWorks(allWorks);\n  };\n\n  const handleWorkClick = (work: Work): void => {\n    setSelectedWork(work);\n    setShowWorkDetails(true);\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        建築地図\n      </Typography>\n\n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Button \n          startIcon={<FilterListIcon />} \n          onClick={() => setShowFilters(!showFilters)}\n          sx={{ mb: 2 }}\n        >\n          {showFilters ? 'フィルターを閉じる' : 'フィルターを表示'}\n        </Button>\n\n        {showFilters && (\n          <Box sx={{ mb: 2 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                  fullWidth\n                  label=\"年代（から）\"\n                  name=\"yearFrom\"\n                  type=\"number\"\n                  value={filters.yearFrom}\n                  onChange={handleFilterChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                  fullWidth\n                  label=\"年代（まで）\"\n                  name=\"yearTo\"\n                  type=\"number\"\n                  value={filters.yearTo}\n                  onChange={handleFilterChange}\n                />\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Box sx={{ display: 'flex', gap: 1, height: '100%' }}>\n                  <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    onClick={applyFilters}\n                    sx={{ flexGrow: 1 }}\n                  >\n                    フィルター適用\n                  </Button>\n                  <Button \n                    variant=\"outlined\" \n                    onClick={clearFilters} \n                    sx={{ flexGrow: 1 }}\n                  >\n                    クリア\n                  </Button>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <MapIcon sx={{ mr: 1 }} />\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            マップ上に表示された作品: {works.length}件 {filters.yearFrom && filters.yearTo && `(${filters.yearFrom}年〜${filters.yearTo}年)`}\n          </Typography>\n        </Box>\n      </Paper>\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <Box sx={{ height: 600, bgcolor: 'grey.200', position: 'relative', borderRadius: 1 }}>\n          <MapComponent \n            markers={works}\n            height=\"600px\"\n            zoom={5}\n            center={[35.6762, 139.6503]}\n          />\n          <Box sx={{ position: 'absolute', top: 16, right: 16, width: 320, maxHeight: 568, overflow: 'auto', bgcolor: 'background.paper', borderRadius: 1, boxShadow: 3, p: 2, zIndex: 1000 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              作品リスト\n            </Typography>\n            {works.length === 0 ? (\n              <Typography variant=\"body2\">\n                条件に一致する作品はありません\n              </Typography>\n            ) : (\n              <List dense>\n                {works.map((work) => (\n                  <React.Fragment key={work.id}>\n                    <ListItem \n                      onClick={() => handleWorkClick(work)}\n                      sx={{ \n                        cursor: 'pointer', \n                        bgcolor: selectedWork && selectedWork.id === work.id ? 'action.selected' : 'transparent',\n                        '&:hover': { bgcolor: 'action.hover' } \n                      }}\n                    >\n                      <ListItemText \n                        primary={work.name} \n                        secondary={\n                          <>\n                            {work.architectName && <span>{work.architectName}<br /></span>}\n                            {work.completedYear > 0 && `${work.completedYear}年 | `}\n                            {work.city || ''}\n                          </>\n                        } \n                      />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                  </React.Fragment>\n                ))}\n              </List>\n            )}\n          </Box>\n        </Box>\n      )}\n\n      <Drawer\n        anchor=\"right\"\n        open={showWorkDetails}\n        onClose={() => setShowWorkDetails(false)}\n      >\n        {selectedWork && (\n          <Box sx={{ width: 350, p: 3 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              {selectedWork.name}\n            </Typography>\n            \n            <Box sx={{ mb: 3 }}>\n              {selectedWork.architectName && (\n                <Typography variant=\"subtitle1\" color=\"text.secondary\">\n                  {selectedWork.architectName}\n                </Typography>\n              )}\n              <Typography variant=\"body2\">\n                {selectedWork.completedYear > 0 && `${selectedWork.completedYear}年`}\n                {selectedWork.city && ` | ${selectedWork.city}`}\n              </Typography>\n              {selectedWork.location && (\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                  {selectedWork.location}\n                </Typography>\n              )}\n            </Box>\n            \n            <Box sx={{ mb: 3, height: 200 }}>\n              <MapComponent \n                singleMarker={selectedWork}\n                height=\"200px\"\n                zoom={15}\n                center={[selectedWork.latitude, selectedWork.longitude]}\n              />\n            </Box>\n\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 4 }}>\n              <Button \n                variant=\"outlined\" \n                onClick={() => setShowWorkDetails(false)}\n              >\n                閉じる\n              </Button>\n              <Button \n                variant=\"contained\" \n                component={RouterLink}\n                to={`/architecture/${selectedWork.id}`}\n              >\n                詳細を見る\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </Drawer>\n    </Container>\n  );\n};\n\nexport default MapPage; ","/**\n * ErrorBoundary component for catching and displaying runtime errors gracefully\n * This improves user experience by showing friendly error messages instead of crashing the app\n */\n\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { Box, Typography, Button, Paper } from '@mui/material';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render shows the fallback UI\n    return { hasError: true, error, errorInfo: null };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // You can log the error to an error reporting service here\n    console.error('Uncaught error:', error, errorInfo);\n    this.setState({\n      error,\n      errorInfo\n    });\n  }\n\n  handleRetry = (): void => {\n    // Simply reload the page as a basic recovery mechanism\n    window.location.reload();\n  };\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      // Default error UI\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: 4,\n            height: '100vh'\n          }}\n        >\n          <Paper\n            elevation={3}\n            sx={{\n              padding: 4,\n              maxWidth: 600,\n              width: '100%',\n              borderRadius: 2,\n              textAlign: 'center'\n            }}\n          >\n            <Typography variant=\"h5\" color=\"error\" gutterBottom>\n              問題が発生しました\n            </Typography>\n            \n            <Typography variant=\"body1\" paragraph>\n              アプリケーションで予期しないエラーが発生しました。\n              お手数ですが、再読み込みをお試しください。\n            </Typography>\n\n            {process.env.NODE_ENV === 'development' && this.state.error && (\n              <Box\n                sx={{\n                  mt: 2,\n                  p: 2,\n                  bgcolor: '#f5f5f5',\n                  borderRadius: 1,\n                  textAlign: 'left',\n                  overflowX: 'auto'\n                }}\n              >\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Error details (開発モードのみ表示):\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  component=\"pre\"\n                  sx={{\n                    whiteSpace: 'pre-wrap',\n                    fontSize: '0.8rem'\n                  }}\n                >\n                  {this.state.error.toString()}\n                </Typography>\n                {this.state.errorInfo && (\n                  <Typography\n                    variant=\"body2\"\n                    component=\"pre\"\n                    sx={{\n                      whiteSpace: 'pre-wrap',\n                      fontSize: '0.8rem',\n                      mt: 1\n                    }}\n                  >\n                    {this.state.errorInfo.componentStack}\n                  </Typography>\n                )}\n              </Box>\n            )}\n\n            <Box sx={{ mt: 3 }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.handleRetry}\n                sx={{ mr: 2 }}\n              >\n                ページを再読み込み\n              </Button>\n              <Button\n                variant=\"outlined\"\n                onClick={() => window.location.href = '/'}\n              >\n                ホームに戻る\n              </Button>\n            </Box>\n          </Paper>\n        </Box>\n      );\n    }\n\n    // If there's no error, render children normally\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","/**\n * GitHub Pages redirection utility\n * \n * This module handles the redirection mechanism used with GitHub Pages\n * for single-page applications. It works with the 404.html pattern\n * to support client-side routing in GitHub Pages.\n */\n\n/**\n * Parse GitHub Pages redirect URL parameters\n * \n * When a user directly accesses a route like /architects/123\n * GitHub Pages serves the 404.html which redirects to /?/architects/123\n * This function extracts the original path and redirects correctly\n */\nexport function handleGitHubPagesRedirect(): void {\n  // Check if we're on a GitHub Pages redirect URL\n  if (\n    typeof window !== 'undefined' && // Check for browser environment\n    window.location.search.includes('?/') // Detect GitHub Pages redirect pattern\n  ) {\n    // Extract the path from the search params\n    const redirectedPath = window.location.search\n      .substring(2) // Remove the '?/' prefix\n      .replace(/~and~/g, '&'); // Replace encoded ampersands\n\n    // Extract any hash fragment\n    const hashFragment = window.location.hash;\n\n    // Remove any search params after handling the redirect\n    const cleanUrl = \n      window.location.origin + \n      window.location.pathname + \n      (hashFragment || '');\n\n    // Use History API to replace the URL without reloading\n    window.history.replaceState(\n      null,\n      document.title,\n      cleanUrl + (hashFragment || '')\n    );\n\n    console.log('Handled GitHub Pages redirect for path:', redirectedPath);\n  }\n}\n\n/**\n * GitHubページに関連するユーティリティ関数\n * GitHub Pagesで動作するSPAに必要な処理を提供\n */\n\n/**\n * 実行環境がGitHub Pagesかどうかを判定\n * @returns GitHub Pages環境ならtrue\n */\nexport const isGitHubPages = (): boolean => {\n  try {\n    // GitHubページのURLパターンをチェック\n    const hostname = window?.location?.hostname || '';\n    return /github\\.io$/.test(hostname);\n  } catch (e) {\n    console.error('環境チェックエラー:', e);\n    return false;\n  }\n};\n\n/**\n * GitHubページのベースURLを取得\n * @returns ベースURL（例: /archi-site）\n */\nexport const getBaseUrl = (): string => {\n  if (!isGitHubPages()) {\n    return '';\n  }\n  \n  try {\n    const pathname = window?.location?.pathname || '';\n    // 最初のパスセグメントを取得（リポジトリ名）\n    const firstPathSegment = pathname.split('/').filter(Boolean)[0];\n    return firstPathSegment ? `/${firstPathSegment}` : '';\n  } catch (e) {\n    console.error('ベースURL取得エラー:', e);\n    return '';\n  }\n};\n\n/**\n * HashRouterで使用する相対パスを絶対パスに変換\n * @param relativePath 相対パス（例: architecture/123）\n * @returns ハッシュ付きのパス（例: /#/architecture/123）\n */\nexport const toHashPath = (relativePath: string): string => {\n  // 先頭の/を除去\n  const cleanPath = relativePath.startsWith('/') \n    ? relativePath.substring(1) \n    : relativePath;\n  \n  // #/プレフィックスを追加\n  return `#/${cleanPath}`;\n};\n\n/**\n * アセットの絶対URLを取得（GitHub Pages環境では相対パスの解決が必要）\n * @param assetPath アセットへの相対パス\n * @returns 絶対パス\n */\nexport const getAssetUrl = (assetPath: string): string => {\n  // 先頭の/を除去\n  const cleanPath = assetPath.startsWith('/') \n    ? assetPath.substring(1) \n    : assetPath;\n  \n  // GitHub Pages環境ではベースパスを先頭に追加\n  if (isGitHubPages()) {\n    const baseUrl = getBaseUrl();\n    return `${baseUrl}/${cleanPath}`;\n  }\n  \n  // 開発環境では通常の相対パスを使用\n  return `/${cleanPath}`;\n};\n\n/**\n * 現在のURL（ハッシュ部分含む）をコピーするための関数\n * シェア機能などで使用\n * @returns 成功時はtrue\n */\nexport const copyCurrentUrl = async (): Promise<boolean> => {\n  try {\n    // 現在のURLを取得\n    const url = window.location.href;\n    \n    // Clipboard APIが利用可能ならそれを使用\n    if (navigator.clipboard) {\n      await navigator.clipboard.writeText(url);\n      return true;\n    }\n    \n    // フォールバック: 一時的な要素を作成してコピー\n    const textArea = document.createElement('textarea');\n    textArea.value = url;\n    textArea.style.position = 'fixed';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    \n    const successful = document.execCommand('copy');\n    document.body.removeChild(textArea);\n    \n    return successful;\n  } catch (err) {\n    console.error('URL複製エラー:', err);\n    return false;\n  }\n};","/**\n * Database Utilities\n * \n * Utility functions for working with database results.\n */\n\ntype QueryResult = {\n  columns: string[];\n  values: any[][];\n};\n\n/**\n * Convert a SQL.js query result to an array of objects\n * where each object represents a row with column names as keys\n * \n * @param result SQL.js query result\n * @returns Array of objects\n */\nexport const resultToObjects = (result?: QueryResult): any[] => {\n  if (!result || !result.columns || !result.values) return [];\n  \n  const { columns, values } = result;\n  return values.map(row => {\n    const obj: Record<string, any> = {};\n    columns.forEach((col, i) => {\n      obj[col] = row[i];\n    });\n    return obj;\n  });\n};\n\n/**\n * Escape and validate a column name for use in ORDER BY clauses\n * to prevent SQL injection\n * \n * @param columnName Column name to escape\n * @returns Safe column name\n */\nexport const escapeSortColumn = (columnName: string): string => {\n  if (!columnName) return 'ZAA_NAME'; // Default sort column\n  \n  // Allow only alphanumeric and underscore characters\n  const safeColumn = columnName.replace(/[^a-zA-Z0-9_]/g, '');\n  \n  // List of allowed columns (whitelist approach)\n  const allowedColumns = [\n    'ZAA_ID', 'ZAA_NAME', 'ZAA_PREFECTURE', 'ZAA_CITY', 'ZAA_YEAR',\n    'ZAR_ID', 'ZAR_NAME', 'ZAR_BIRTHYEAR', 'ZAR_NATIONALITY',\n    'id', 'name', 'prefecture', 'city', 'year', 'birthyear', 'nationality'\n  ];\n  \n  // If the sanitized column is in the allowed list, return it\n  if (allowedColumns.includes(safeColumn)) {\n    return safeColumn;\n  }\n  \n  // For columns not in the whitelist, we still allow them if they're safe\n  // (only contain alphanumeric and underscore characters)\n  return safeColumn;\n};\n\n/**\n * Database utilities for debugging and verification\n */\n\nimport { isDatabaseAvailable } from '../services/db';\nimport { isGitHubPages } from './githubPages';\nimport type { DatabaseMetadata } from '../types/db';\n\n// Debug flag - set to true to enable verbose logging\nconst DEBUG = true;\n\n/**\n * Verifies that the database can be loaded correctly in the current environment\n * and logs detailed information about any issues encountered\n */\nexport async function verifyDatabaseLoading(): Promise<boolean> {\n  try {\n    console.log('🔍 Verifying database availability...');\n    \n    // Check if we're in production (GitHub Pages) environment\n    const isProduction = import.meta.env.PROD;\n    console.log(`📊 Environment: ${isProduction ? 'Production' : 'Development'}`);\n    \n    // Log base URL information\n    const baseUrl = isProduction ? '/archi-site' : '';\n    console.log(`🌐 Base URL: ${baseUrl}`);\n    console.log(`🗄️ Expected database path: ${baseUrl}/db/archimap.sqlite`);\n    console.log(`📑 Expected suffix path: ${baseUrl}/db/archimap.sqlite.suffix`);\n    \n    // Try to check database availability\n    const startTime = performance.now();\n    const isAvailable = await isDatabaseAvailable();\n    const endTime = performance.now();\n    \n    if (isAvailable) {\n      console.log(`✅ Database verification successful! (${(endTime - startTime).toFixed(2)}ms)`);\n      return true;\n    } else {\n      console.error('❌ Database verification failed - database is not available');\n      \n      // More detailed diagnostics in production\n      if (isProduction) {\n        console.error('📋 Production diagnostics:');\n        console.error(' - Check that database files exist in the build output');\n        console.error(' - Verify CORS headers if using a CDN');\n        console.error(' - Check for console errors related to WASM loading');\n        console.error(' - Ensure sql-wasm.wasm is accessible');\n      }\n      \n      return false;\n    }\n  } catch (error) {\n    console.error('💥 Database verification error:', error);\n    return false;\n  }\n}\n\n/**\n * データベース設定の詳細をログに出力\n * 開発時のデバッグ用\n */\nexport const logDatabaseDetails = async (): Promise<void> => {\n  try {\n    const isProduction = import.meta.env?.PROD || false;\n    const isGHPages = isGitHubPages();\n    \n    console.log(`アプリケーション環境: ${isProduction ? '本番' : '開発'}`);\n    console.log(`GitHub Pages環境: ${isGHPages ? 'はい' : 'いいえ'}`);\n    \n    // 本番環境ではデータベース情報ファイルを取得\n    if (isProduction) {\n      try {\n        const dbInfoPath = isGHPages ? './db/database-info.json' : '/db/database-info.json';\n        const response = await fetch(dbInfoPath);\n        \n        if (response.ok) {\n          const dbInfo: DatabaseMetadata = await response.json();\n          \n          console.log('データベース情報:');\n          console.log(`- ファイル: ${dbInfo.database}`);\n          console.log(`- 更新日時: ${dbInfo.date}`);\n          console.log(`- サイズ: ${(dbInfo.size / 1024 / 1024).toFixed(2)} MB`);\n          console.log(`- チャンク: ${dbInfo.chunks} (${dbInfo.chunkSize / 1024}KB)のチャンク`);\n          console.log(`- テーブル数: ${dbInfo.tables.length}`);\n          console.log(`- インデックス数: ${dbInfo.indexes.length}`);\n        } else {\n          console.warn('データベースメタデータが見つかりません:', response.status);\n        }\n      } catch (error) {\n        console.warn('データベースメタデータ読み込みエラー:', error);\n      }\n    } else {\n      console.log('開発環境: データベースメタデータ読み込みをスキップ');\n    }\n  } catch (error) {\n    console.error('データベース設定ログエラー:', error);\n  }\n};\n\n/**\n * データベースエラーのフォーマット\n * @param error エラーオブジェクト\n * @returns フォーマット済みエラーメッセージ\n */\nexport const formatDatabaseError = (error: unknown): string => {\n  if (error instanceof Error) {\n    return `データベースエラー: ${error.message}`;\n  }\n  return `データベースエラー: ${String(error)}`;\n};\n\n/**\n * クエリパフォーマンスを測定するためのラッパー関数\n * @param name クエリの名前/識別子\n * @param fn 実行する非同期関数\n * @returns 元の関数の結果\n */\nexport async function measureQueryPerformance<T>(\n  name: string,\n  fn: () => Promise<T>\n): Promise<T> {\n  const start = performance.now();\n  try {\n    const result = await fn();\n    const duration = performance.now() - start;\n    \n    // 100ms以上かかるクエリは警告\n    if (duration > 100) {\n      console.warn(`クエリパフォーマンス警告 [${name}]: ${duration.toFixed(2)}ms`);\n    } else {\n      console.log(`クエリ実行 [${name}]: ${duration.toFixed(2)}ms`);\n    }\n    \n    return result;\n  } catch (error) {\n    const duration = performance.now() - start;\n    console.error(`クエリエラー [${name}]: ${duration.toFixed(2)}ms`, error);\n    throw error;\n  }\n}\n\n/**\n * Extract database loading errors from error objects\n */\nexport function extractDatabaseErrorDetails(error: unknown): string {\n  if (!error) return 'Unknown error';\n  \n  if (error instanceof Error) {\n    // Check for specific error patterns\n    if (error.message.includes('Failed to fetch')) {\n      return 'Network error: Could not download the database file. ' +\n             'Check your network connection and ensure the database URL is correct.';\n    }\n    \n    if (error.message.includes('WebAssembly')) {\n      return 'WebAssembly error: Could not initialize SQL.js. ' +\n             'Ensure your browser supports WebAssembly and that sql-wasm.wasm is accessible.';\n    }\n    \n    if (error.message.includes('SharedArrayBuffer')) {\n      return 'SharedArrayBuffer error: This feature requires cross-origin isolation. ' +\n             'Please ensure the server has the correct COOP and COEP headers.';\n    }\n    \n    return error.message;\n  }\n  \n  return String(error);\n}","import React, { useEffect, useState } from 'react';\nimport { CircularProgress, Box, Typography, Alert } from '@mui/material';\nimport { initDatabase, DatabaseStatus, getDatabaseStatus } from '../services/db/ClientDatabaseService';\n\ninterface DatabaseLoaderProps {\n  children: React.ReactNode;\n}\n\n/**\n * データベースの初期化と読み込み状態を管理するコンポーネント\n * 非ブロッキング: アプリケーションの描画を妨げない\n */\nexport const DatabaseLoader: React.FC<DatabaseLoaderProps> = ({ children }) => {\n  const [status, setStatus] = useState<DatabaseStatus>(getDatabaseStatus());\n  const [error, setError] = useState<string | null>(null);\n  const [progress, setProgress] = useState<number>(0);\n  \n  useEffect(() => {\n    let isMounted = true;\n    let progressInterval: NodeJS.Timeout;\n    \n    const initDb = async () => {\n      // 既に接続が確立されている場合は処理不要\n      if (status === DatabaseStatus.READY) {\n        return;\n      }\n      \n      // アプリケーションの描画を妨げないよう、非同期で初期化\n      setTimeout(async () => {\n        // 進捗表示のためのインターバル（実際の進捗を反映するにはイベントリスナーが必要）\n        progressInterval = setInterval(() => {\n          if (isMounted) {\n            setProgress(prev => {\n              // 95%まで徐々に増加（残りは実際の完了時に設定）\n              const increment = (95 - prev) * 0.1;\n              return Math.min(prev + increment, 95);\n            });\n          }\n        }, 300);\n        \n        try {\n          await initDatabase();\n          \n          if (isMounted) {\n            setProgress(100);\n            setStatus(DatabaseStatus.READY);\n          }\n        } catch (err) {\n          if (isMounted) {\n            setError(`データベースの初期化に失敗しました: ${err instanceof Error ? err.message : '不明なエラー'}`);\n            setStatus(DatabaseStatus.ERROR);\n          }\n        } finally {\n          clearInterval(progressInterval);\n        }\n      }, 100); // 100ms遅延で非ブロッキング\n    };\n    \n    initDb();\n    \n    return () => {\n      isMounted = false;\n      clearInterval(progressInterval);\n    };\n  }, [status]);\n  \n  // 常に子コンポーネントを表示（非ブロッキング）\n  // データベースの状態はコンテキストで管理\n  return <>{children}</>;\n};\n\nexport default DatabaseLoader;","import { createTheme, ThemeOptions } from '@mui/material/styles';\n\n// Modern architecture-inspired color palette\nconst palette = {\n  primary: {\n    main: '#2E3440',     // Dark blue-gray (Nordic dark)\n    light: '#4C566A',    // Lighter blue-gray\n    dark: '#1B1F2B',     // Darker blue-gray\n    contrastText: '#FFFFFF',\n  },\n  secondary: {\n    main: '#88C0D0',     // Soft blue (Nordic frost)\n    light: '#B3D4E0',    // Lighter blue\n    dark: '#5E81AC',     // Darker blue\n    contrastText: '#2E3440',\n  },\n  accent: {\n    main: '#D08770',     // Warm orange (Nordic aurora)\n    light: '#E5A088',    // Lighter orange\n    dark: '#BF616A',     // Coral red\n  },\n  background: {\n    default: '#ECEFF4',  // Light gray (Nordic snow)\n    paper: '#FFFFFF',    // Pure white\n    elevated: '#F8F9FA', // Slightly elevated\n  },\n  text: {\n    primary: '#2E3440',  // Dark blue-gray\n    secondary: '#4C566A', // Medium blue-gray\n    disabled: '#D8DEE9', // Light gray\n  },\n  divider: '#E5E9F0',    // Light gray divider\n  success: {\n    main: '#A3BE8C',     // Green (Nordic aurora)\n    light: '#B8CCA3',\n    dark: '#8CAF69',\n  },\n  warning: {\n    main: '#EBCB8B',     // Yellow (Nordic aurora)\n    light: '#F0D5A3',\n    dark: '#D4B571',\n  },\n  error: {\n    main: '#BF616A',     // Red (Nordic aurora)\n    light: '#CC8088',\n    dark: '#A54A56',\n  },\n  info: {\n    main: '#88C0D0',     // Blue (Nordic frost)\n    light: '#B3D4E0',\n    dark: '#5E81AC',\n  },\n};\n\n// Enhanced typography with better hierarchy\nconst typography = {\n  fontFamily: '\"Inter\", \"Roboto\", \"Helvetica Neue\", \"Arial\", sans-serif',\n  h1: {\n    fontSize: '3rem',\n    fontWeight: 700,\n    lineHeight: 1.2,\n    letterSpacing: '-0.02em',\n  },\n  h2: {\n    fontSize: '2.25rem',\n    fontWeight: 600,\n    lineHeight: 1.3,\n    letterSpacing: '-0.01em',\n  },\n  h3: {\n    fontSize: '1.875rem',\n    fontWeight: 600,\n    lineHeight: 1.3,\n    letterSpacing: '-0.01em',\n  },\n  h4: {\n    fontSize: '1.5rem',\n    fontWeight: 600,\n    lineHeight: 1.4,\n  },\n  h5: {\n    fontSize: '1.25rem',\n    fontWeight: 600,\n    lineHeight: 1.4,\n  },\n  h6: {\n    fontSize: '1.125rem',\n    fontWeight: 600,\n    lineHeight: 1.4,\n  },\n  subtitle1: {\n    fontSize: '1rem',\n    fontWeight: 500,\n    lineHeight: 1.5,\n  },\n  subtitle2: {\n    fontSize: '0.875rem',\n    fontWeight: 500,\n    lineHeight: 1.5,\n  },\n  body1: {\n    fontSize: '1rem',\n    fontWeight: 400,\n    lineHeight: 1.6,\n  },\n  body2: {\n    fontSize: '0.875rem',\n    fontWeight: 400,\n    lineHeight: 1.6,\n  },\n  caption: {\n    fontSize: '0.75rem',\n    fontWeight: 400,\n    lineHeight: 1.5,\n  },\n  button: {\n    fontSize: '0.875rem',\n    fontWeight: 600,\n    textTransform: 'none' as const,\n    letterSpacing: '0.02em',\n  },\n};\n\n// Enhanced component styling\nconst components = {\n  MuiButton: {\n    styleOverrides: {\n      root: {\n        borderRadius: 8,\n        padding: '10px 24px',\n        transition: 'all 0.2s ease-in-out',\n        '&:hover': {\n          transform: 'translateY(-1px)',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n        },\n      },\n      contained: {\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\n      },\n    },\n  },\n  MuiCard: {\n    styleOverrides: {\n      root: {\n        borderRadius: 12,\n        boxShadow: '0 2px 12px rgba(0, 0, 0, 0.08)',\n        transition: 'all 0.3s ease-in-out',\n        '&:hover': {\n          transform: 'translateY(-2px)',\n          boxShadow: '0 8px 24px rgba(0, 0, 0, 0.15)',\n        },\n      },\n    },\n  },\n  MuiTextField: {\n    styleOverrides: {\n      root: {\n        '& .MuiOutlinedInput-root': {\n          borderRadius: 8,\n          transition: 'all 0.2s ease-in-out',\n          '&:hover': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: palette.secondary.main,\n            },\n          },\n          '&.Mui-focused': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: palette.primary.main,\n              borderWidth: 2,\n            },\n          },\n        },\n      },\n    },\n  },\n  MuiAppBar: {\n    styleOverrides: {\n      root: {\n        boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',\n        backdropFilter: 'blur(10px)',\n        backgroundColor: 'rgba(46, 52, 64, 0.95)',\n      },\n    },\n  },\n  MuiChip: {\n    styleOverrides: {\n      root: {\n        borderRadius: 8,\n        fontWeight: 500,\n      },\n    },\n  },\n  MuiPaper: {\n    styleOverrides: {\n      root: {\n        borderRadius: 12,\n        boxShadow: '0 2px 12px rgba(0, 0, 0, 0.08)',\n      },\n      elevation1: {\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.06)',\n      },\n      elevation2: {\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n      },\n      elevation3: {\n        boxShadow: '0 8px 24px rgba(0, 0, 0, 0.15)',\n      },\n    },\n  },\n};\n\n// Create theme with enhanced styling\nexport const theme = createTheme({\n  palette,\n  typography,\n  components,\n  spacing: 8,\n  shape: {\n    borderRadius: 8,\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n  transitions: {\n    easing: {\n      easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n      easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n      easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n      sharp: 'cubic-bezier(0.4, 0, 0.6, 1)',\n    },\n  },\n} as ThemeOptions);","import React, { useEffect } from 'react';\nimport { HashRouter, Routes, Route, useLocation } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport ArchitecturePage from './pages/ArchitecturePage';\nimport ArchitectureSinglePage from './pages/ArchitectureSinglePage';\nimport ArchitectsPage from './pages/ArchitectsPage';\nimport ArchitectSinglePage from './pages/ArchitectSinglePage';\nimport MapPage from './pages/MapPage';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { logDatabaseDetails } from './utils/dbUtils';\nimport DatabaseLoader from './components/DatabaseLoader';\nimport { theme } from './styles/theme';\n\n/**\n * ScrollToTop component - scrolls to top when route changes\n */\nconst ScrollToTop: React.FC = () => {\n  const { pathname } = useLocation();\n  \n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  \n  return null;\n};\n\n/**\n * Main application component with routing and providers\n */\nconst AppContent: React.FC = () => {\n  // Log database configuration information when app starts\n  useEffect(() => {\n    // Log if app is running in GitHub Pages production environment\n    const isProduction = import.meta.env?.PROD || false;\n    console.log(`App running in ${isProduction ? 'production' : 'development'} mode`);\n    \n    // Log database configuration details for debugging purposes\n    try {\n      logDatabaseDetails();\n    } catch (error) {\n      console.warn('Failed to log database details:', error);\n    }\n  }, []);\n\n  return (\n    <>\n      <ScrollToTop />\n      <Header />\n      <main className=\"container\" role=\"main\">\n        <ErrorBoundary>\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/architecture\" element={<ArchitecturePage />} />\n            <Route path=\"/architecture/:id\" element={<ArchitectureSinglePage />} />\n            <Route path=\"/architects\" element={<ArchitectsPage />} />\n            <Route path=\"/architects/:id\" element={<ArchitectSinglePage />} />\n            <Route path=\"/map\" element={<MapPage />} />\n          </Routes>\n        </ErrorBoundary>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <ErrorBoundary>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <HashRouter>\n          <DatabaseLoader>\n            <AppContent />\n          </DatabaseLoader>\n        </HashRouter>\n      </ThemeProvider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n// import { HashRouter } from 'react-router-dom'; // Moved to App.tsx\nimport './index.css';\nimport App from './App';\n\n// ブラウザコンソールにデバッグメッセージを出力\nconsole.log('React アプリケーションを初期化中...', process.env.NODE_ENV);\nconsole.log('DOM root element:', document.getElementById('root'));\n\n// React 18の新しいcreateRootメソッドを使用\nconst container = document.getElementById('root');\nif (!container) {\n  console.error('root要素が見つかりません。HTMLに<div id=\"root\"></div>が存在するか確認してください。');\n  throw new Error('Failed to find the root element');\n}\nconst root = createRoot(container);\n\n// GitHub Pages対応のためBrowserRouterからHashRouterに変更\n// HashRouterではbasenameは不要（URLのハッシュ部分を使用するため）\nconsole.log('Using HashRouter for GitHub Pages compatibility');\n\ntry {\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n  console.log('React アプリケーションのレンダリングが成功しました');\n} catch (error) {\n  console.error('React アプリケーションのレンダリング中にエラーが発生しました:', error);\n}"],"file":"assets/index-Di6ySOlv.js"}